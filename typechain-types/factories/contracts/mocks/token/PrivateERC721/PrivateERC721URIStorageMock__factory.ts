/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PrivateERC721URIStorageMock,
  PrivateERC721URIStorageMockInterface,
} from "../../../../../contracts/mocks/token/PrivateERC721/PrivateERC721URIStorageMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721URIStorageNonMintedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "ctUint64[]",
        name: "_itTokenURI",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_itSignature",
        type: "bytes[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "ctUint64[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4578616d706c65000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f45584c000000000000000000000000000000000000000000000000000000000081525081600190816200008f919062000324565b508060029081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b612a04806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb465146102ad578063b88d4fde146102c9578063c87b56dd146102e5578063e985e9c51461031557610100565b806342842e0e146102135780636352211e1461022f57806370a082311461025f57806395d89b411461028f57610100565b80630dbe671f116100d35780630dbe671f1461019f57806318160ddd146101bd5780631c04c8c1146101db57806323b872dd146101f757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611dc4565b610345565b60405161012c9190611e0c565b60405180910390f35b61013d6103a2565b60405161014a9190611eb7565b60405180910390f35b61016d60048036038101906101689190611f0f565b610434565b60405161017a9190611f7d565b60405180910390f35b61019d60048036038101906101989190611fc4565b610450565b005b6101a7610466565b6040516101b49190611f7d565b60405180910390f35b6101c561048a565b6040516101d29190612013565b60405180910390f35b6101f560048036038101906101f091906120e9565b610494565b005b610211600480360381019061020c919061217e565b610519565b005b61022d6004803603810190610228919061217e565b61061b565b005b61024960048036038101906102449190611f0f565b61063b565b6040516102569190611f7d565b60405180910390f35b610279600480360381019061027491906121d1565b61064d565b6040516102869190612013565b60405180910390f35b610297610707565b6040516102a49190611eb7565b60405180910390f35b6102c760048036038101906102c2919061222a565b610799565b005b6102e360048036038101906102de919061239a565b6107af565b005b6102ff60048036038101906102fa9190611f0f565b6107cc565b60405161030c9190612507565b60405180910390f35b61032f600480360381019061032a9190612529565b610918565b60405161033c9190611e0c565b60405180910390f35b60008060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039b575061039a826109ac565b5b9050919050565b6060600180546103b190612598565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd90612598565b801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b5050505050905090565b600061043f82610a26565b5061044982610aae565b9050919050565b610462828261045d610aeb565b610af3565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600854905090565b600060085490506104a58682610b05565b6104b3338287878787610bfe565b6001600860008282546104c691906125f8565b92505081905550808673ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe60405160405180910390a3505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058b5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105829190611f7d565b60405180910390fd5b600061059f838361059a610aeb565b610d48565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610615578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161060c9392919061262c565b60405180910390fd5b50505050565b610636838383604051806020016040528060008152506107af565b505050565b600061064682610a26565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c05760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106b79190611f7d565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606002805461071690612598565b80601f016020809104026020016040519081016040528092919081815260200182805461074290612598565b801561078f5780601f106107645761010080835404028352916020019161078f565b820191906000526020600020905b81548152906001019060200180831161077257829003601f168201915b5050505050905090565b6107ab6107a4610aeb565b8383610ea5565b5050565b6107ba848484610519565b6107c684848484611014565b50505050565b6060600060076000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561084957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610803565b5050505090506000600760008581526020019081526020016000208054905067ffffffffffffffff8111156108815761088061226f565b5b6040519080825280602002602001820160405280156108af5781602001602082028036833780820191505090505b50905060005b825181101561090d578281815181106108d1576108d0612663565b5b6020026020010151602001518282815181106108f0576108ef612663565b5b6020026020010181815250508061090690612692565b90506108b5565b508092505050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a1f5750610a1e826111cb565b5b9050919050565b600080610a3283611235565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aa557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a9c9190612013565b60405180910390fd5b80915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b008383836001611272565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b775760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610b6e9190611f7d565b60405180910390fd5b6000610b8583836000610d48565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bf95760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610bf09190611f7d565b60405180910390fd5b505050565b60008484905067ffffffffffffffff811115610c1d57610c1c61226f565b5b604051908082528060200260200182016040528015610c4b5781602001602082028036833780820191505090505b509050610c56611c91565b60005b86869050811015610d3057868682818110610c7757610c76612663565b5b90506020020135826000018181525050848482818110610c9a57610c99612663565b5b9050602002810190610cac91906126e9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508260200181905250610d0082611437565b838281518110610d1357610d12612663565b5b60200260200101818152505080610d2990612692565b9050610c59565b50610d3e88888460016114de565b5050505050505050565b60008060076000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610dc457838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610d7e565b5050505090506000815167ffffffffffffffff811115610de757610de661226f565b5b604051908082528060200260200182016040528015610e155781602001602082028036833780820191505090505b50905060005b8151811015610e7b57610e4b838281518110610e3a57610e39612663565b5b6020026020010151600001516116c6565b828281518110610e5e57610e5d612663565b5b60200260200101818152505080610e7490612692565b9050610e1b565b506000610e89878787611763565b9050610e9887878460006114de565b8093505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f1657816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f0d9190611f7d565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110079190611e0c565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156111c5578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611058610aeb565b8685856040518563ffffffff1660e01b815260040161107a94939291906127a1565b6020604051808303816000875af19250505080156110b657506040513d601f19601f820116820180604052508101906110b39190612802565b60015b61113a573d80600081146110e6576040519150601f19603f3d011682016040523d82523d6000602084013e6110eb565b606091505b50600081510361113257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111299190611f7d565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111c357836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111ba9190611f7d565b60405180910390fd5b505b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112ab5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113df5760006112bb84610a26565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561132657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561133957506113378184610918565b155b1561137b57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113729190611f7d565b60405180910390fd5b81156113dd57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e106004808111156114695761146861282f565b5b60f81b846000015185602001516040518463ffffffff1660e01b815260040161149493929190612899565b6020604051808303816000875af11580156114b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d791906128ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff166114ff8461063b565b73ffffffffffffffffffffffffffffffffffffffff160361155757826040517f8684391300000000000000000000000000000000000000000000000000000000815260040161154e9190612013565b60405180910390fd5b6000600760008581526020019081526020016000209050611576611cab565b82156116295760005b8451811015611600576115ac85828151811061159e5761159d612663565b5b60200260200101518861197d565b91508282908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050806115f990612692565b905061157f565b508160076000878152602001908152602001600020908054611623929190611cc5565b506116be565b60005b84518110156116995761165985828151811061164b5761164a612663565b5b60200260200101518861197d565b9150816020015183828154811061167357611672612663565b5b9060005260206000209060020201600101819055508061169290612692565b905061162c565b5081600760008781526020019081526020016000209080546116bc929190611cc5565b505b505050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e56004808111156116f8576116f761282f565b5b60f81b846040518363ffffffff1660e01b8152600401611719929190612919565b6020604051808303816000875af1158015611738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175c91906128ec565b9050919050565b60008061176f84611235565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146117b1576117b08184866119b0565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611842576117f3600085600080611272565b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146118c5576001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611985611cab565b61198e83611a74565b8160000181815250506119a18383611b11565b81602001818152505092915050565b6119bb838383611bd0565b611a6f57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a3057806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a279190612013565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a66929190612942565b60405180910390fd5b505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c02600480811115611aa657611aa561282f565b5b60f81b846040518363ffffffff1660e01b8152600401611ac7929190612919565b6020604051808303816000875af1158015611ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0a91906128ec565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e68600480811115611b4357611b4261282f565b5b60f81b8585604051602001611b5891906129b3565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611b8593929190612899565b6020604051808303816000875af1158015611ba4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc891906128ec565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611c8857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c495750611c488484610918565b5b80611c8757508273ffffffffffffffffffffffffffffffffffffffff16611c6f83610aae565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b604051806040016040528060008152602001606081525090565b604051806040016040528060008152602001600081525090565b828054828255906000526020600020906002028101928215611d205760005260206000209160020282015b82811115611d1f5782826000820154816000015560018201548160010155505091600201919060020190611cf0565b5b509050611d2d9190611d31565b5090565b5b80821115611d5457600080820160009055600182016000905550600201611d32565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611da181611d6c565b8114611dac57600080fd5b50565b600081359050611dbe81611d98565b92915050565b600060208284031215611dda57611dd9611d62565b5b6000611de884828501611daf565b91505092915050565b60008115159050919050565b611e0681611df1565b82525050565b6000602082019050611e216000830184611dfd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e61578082015181840152602081019050611e46565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e8982611e27565b611e938185611e32565b9350611ea3818560208601611e43565b611eac81611e6d565b840191505092915050565b60006020820190508181036000830152611ed18184611e7e565b905092915050565b6000819050919050565b611eec81611ed9565b8114611ef757600080fd5b50565b600081359050611f0981611ee3565b92915050565b600060208284031215611f2557611f24611d62565b5b6000611f3384828501611efa565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6782611f3c565b9050919050565b611f7781611f5c565b82525050565b6000602082019050611f926000830184611f6e565b92915050565b611fa181611f5c565b8114611fac57600080fd5b50565b600081359050611fbe81611f98565b92915050565b60008060408385031215611fdb57611fda611d62565b5b6000611fe985828601611faf565b9250506020611ffa85828601611efa565b9150509250929050565b61200d81611ed9565b82525050565b60006020820190506120286000830184612004565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126120535761205261202e565b5b8235905067ffffffffffffffff8111156120705761206f612033565b5b60208301915083602082028301111561208c5761208b612038565b5b9250929050565b60008083601f8401126120a9576120a861202e565b5b8235905067ffffffffffffffff8111156120c6576120c5612033565b5b6020830191508360208202830111156120e2576120e1612038565b5b9250929050565b60008060008060006060868803121561210557612104611d62565b5b600061211388828901611faf565b955050602086013567ffffffffffffffff81111561213457612133611d67565b5b6121408882890161203d565b9450945050604086013567ffffffffffffffff81111561216357612162611d67565b5b61216f88828901612093565b92509250509295509295909350565b60008060006060848603121561219757612196611d62565b5b60006121a586828701611faf565b93505060206121b686828701611faf565b92505060406121c786828701611efa565b9150509250925092565b6000602082840312156121e7576121e6611d62565b5b60006121f584828501611faf565b91505092915050565b61220781611df1565b811461221257600080fd5b50565b600081359050612224816121fe565b92915050565b6000806040838503121561224157612240611d62565b5b600061224f85828601611faf565b925050602061226085828601612215565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122a782611e6d565b810181811067ffffffffffffffff821117156122c6576122c561226f565b5b80604052505050565b60006122d9611d58565b90506122e5828261229e565b919050565b600067ffffffffffffffff8211156123055761230461226f565b5b61230e82611e6d565b9050602081019050919050565b82818337600083830152505050565b600061233d612338846122ea565b6122cf565b9050828152602081018484840111156123595761235861226a565b5b61236484828561231b565b509392505050565b600082601f8301126123815761238061202e565b5b813561239184826020860161232a565b91505092915050565b600080600080608085870312156123b4576123b3611d62565b5b60006123c287828801611faf565b94505060206123d387828801611faf565b93505060406123e487828801611efa565b925050606085013567ffffffffffffffff81111561240557612404611d67565b5b6124118782880161236c565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b600061246e61246961246484611ed9565b612449565b611ed9565b9050919050565b61247e81612453565b82525050565b60006124908383612475565b60208301905092915050565b6000602082019050919050565b60006124b48261241d565b6124be8185612428565b93506124c983612439565b8060005b838110156124fa5781516124e18882612484565b97506124ec8361249c565b9250506001810190506124cd565b5085935050505092915050565b6000602082019050818103600083015261252181846124a9565b905092915050565b600080604083850312156125405761253f611d62565b5b600061254e85828601611faf565b925050602061255f85828601611faf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125b057607f821691505b6020821081036125c3576125c2612569565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061260382611ed9565b915061260e83611ed9565b9250828201905080821115612626576126256125c9565b5b92915050565b60006060820190506126416000830186611f6e565b61264e6020830185612004565b61265b6040830184611f6e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061269d82611ed9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126cf576126ce6125c9565b5b600182019050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612706576127056126da565b5b80840192508235915067ffffffffffffffff821115612728576127276126df565b5b602083019250600182023603831315612744576127436126e4565b5b509250929050565b600081519050919050565b600082825260208201905092915050565b60006127738261274c565b61277d8185612757565b935061278d818560208601611e43565b61279681611e6d565b840191505092915050565b60006080820190506127b66000830187611f6e565b6127c36020830186611f6e565b6127d06040830185612004565b81810360608301526127e28184612768565b905095945050505050565b6000815190506127fc81611d98565b92915050565b60006020828403121561281857612817611d62565b5b6000612826848285016127ed565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6128938161285e565b82525050565b60006060820190506128ae600083018661288a565b6128bb6020830185612004565b81810360408301526128cd8184612768565b9050949350505050565b6000815190506128e681611ee3565b92915050565b60006020828403121561290257612901611d62565b5b6000612910848285016128d7565b91505092915050565b600060408201905061292e600083018561288a565b61293b6020830184612004565b9392505050565b60006040820190506129576000830185611f6e565b6129646020830184612004565b9392505050565b60008160601b9050919050565b60006129838261296b565b9050919050565b600061299582612978565b9050919050565b6129ad6129a882611f5c565b61298a565b82525050565b60006129bf828461299c565b6014820191508190509291505056fea2646970667358221220317dee2938bd29b055ca86660eb4a79875ee03802f7b551370ab8e2c4279f46564736f6c63430008140033";

type PrivateERC721URIStorageMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateERC721URIStorageMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateERC721URIStorageMock__factory extends ContractFactory {
  constructor(...args: PrivateERC721URIStorageMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateERC721URIStorageMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PrivateERC721URIStorageMock__factory {
    return super.connect(runner) as PrivateERC721URIStorageMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateERC721URIStorageMockInterface {
    return new Interface(_abi) as PrivateERC721URIStorageMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateERC721URIStorageMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PrivateERC721URIStorageMock;
  }
}
