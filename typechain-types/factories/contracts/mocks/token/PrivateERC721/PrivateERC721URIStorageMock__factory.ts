/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PrivateERC721URIStorageMock,
  PrivateERC721URIStorageMockInterface,
} from "../../../../../contracts/mocks/token/PrivateERC721/PrivateERC721URIStorageMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721URIStorageNonMintedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "ctUint64[]",
        name: "_itTokenURI",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_itSignature",
        type: "bytes[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "ctUint64[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4578616d706c65000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f45584c000000000000000000000000000000000000000000000000000000000081525081600190816200008f919062000324565b508060029081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b6129cc806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb465146102ad578063b88d4fde146102c9578063c87b56dd146102e5578063e985e9c51461031557610100565b806342842e0e146102135780636352211e1461022f57806370a082311461025f57806395d89b411461028f57610100565b80630dbe671f116100d35780630dbe671f1461019f57806318160ddd146101bd5780631c04c8c1146101db57806323b872dd146101f757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611d8c565b610345565b60405161012c9190611dd4565b60405180910390f35b61013d6103a2565b60405161014a9190611e7f565b60405180910390f35b61016d60048036038101906101689190611ed7565b610434565b60405161017a9190611f45565b60405180910390f35b61019d60048036038101906101989190611f8c565b610450565b005b6101a7610466565b6040516101b49190611f45565b60405180910390f35b6101c561048a565b6040516101d29190611fdb565b60405180910390f35b6101f560048036038101906101f091906120b1565b610494565b005b610211600480360381019061020c9190612146565b610519565b005b61022d60048036038101906102289190612146565b61061b565b005b61024960048036038101906102449190611ed7565b61063b565b6040516102569190611f45565b60405180910390f35b61027960048036038101906102749190612199565b61064d565b6040516102869190611fdb565b60405180910390f35b610297610707565b6040516102a49190611e7f565b60405180910390f35b6102c760048036038101906102c291906121f2565b610799565b005b6102e360048036038101906102de9190612362565b6107af565b005b6102ff60048036038101906102fa9190611ed7565b6107cc565b60405161030c91906124cf565b60405180910390f35b61032f600480360381019061032a91906124f1565b610903565b60405161033c9190611dd4565b60405180910390f35b60008060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039b575061039a82610997565b5b9050919050565b6060600180546103b190612560565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd90612560565b801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b5050505050905090565b600061043f82610a11565b5061044982610a99565b9050919050565b610462828261045d610ad6565b610ade565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600854905090565b600060085490506104a58682610af0565b6104b3338287878787610be9565b6001600860008282546104c691906125c0565b92505081905550808673ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe60405160405180910390a3505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058b5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105829190611f45565b60405180910390fd5b600061059f838361059a610ad6565b610d33565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610615578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161060c939291906125f4565b60405180910390fd5b50505050565b610636838383604051806020016040528060008152506107af565b505050565b600061064682610a11565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c05760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106b79190611f45565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606002805461071690612560565b80601f016020809104026020016040519081016040528092919081815260200182805461074290612560565b801561078f5780601f106107645761010080835404028352916020019161078f565b820191906000526020600020905b81548152906001019060200180831161077257829003601f168201915b5050505050905090565b6107ab6107a4610ad6565b8383610e90565b5050565b6107ba848484610519565b6107c684848484610fff565b50505050565b6060600060076000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561084957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610803565b5050505090506000815167ffffffffffffffff81111561086c5761086b612237565b5b60405190808252806020026020018201604052801561089a5781602001602082028036833780820191505090505b50905060005b82518110156108f8578281815181106108bc576108bb61262b565b5b6020026020010151602001518282815181106108db576108da61262b565b5b602002602001018181525050806108f19061265a565b90506108a0565b508092505050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a0a5750610a09826111b6565b5b9050919050565b600080610a1d83611220565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a9057826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a879190611fdb565b60405180910390fd5b80915050919050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610aeb838383600161125d565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b625760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610b599190611f45565b60405180910390fd5b6000610b7083836000610d33565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610be45760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610bdb9190611f45565b60405180910390fd5b505050565b60008484905067ffffffffffffffff811115610c0857610c07612237565b5b604051908082528060200260200182016040528015610c365781602001602082028036833780820191505090505b509050610c41611c59565b60005b86869050811015610d1b57868682818110610c6257610c6161262b565b5b90506020020135826000018181525050848482818110610c8557610c8461262b565b5b9050602002810190610c9791906126b1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508260200181905250610ceb82611422565b838281518110610cfe57610cfd61262b565b5b60200260200101818152505080610d149061265a565b9050610c44565b50610d2988888460016114c9565b5050505050505050565b60008060076000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610daf57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610d69565b5050505090506000815167ffffffffffffffff811115610dd257610dd1612237565b5b604051908082528060200260200182016040528015610e005781602001602082028036833780820191505090505b50905060005b8151811015610e6657610e36838281518110610e2557610e2461262b565b5b60200260200101516000015161168e565b828281518110610e4957610e4861262b565b5b60200260200101818152505080610e5f9061265a565b9050610e06565b506000610e7487878761172b565b9050610e8387878460006114c9565b8093505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f0157816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ef89190611f45565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff29190611dd4565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156111b0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611043610ad6565b8685856040518563ffffffff1660e01b81526004016110659493929190612769565b6020604051808303816000875af19250505080156110a157506040513d601f19601f8201168201806040525081019061109e91906127ca565b60015b611125573d80600081146110d1576040519150601f19603f3d011682016040523d82523d6000602084013e6110d6565b606091505b50600081510361111d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111149190611f45565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111ae57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111a59190611f45565b60405180910390fd5b505b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112965750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113ca5760006112a684610a11565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561131157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561132457506113228184610903565b155b1561136657826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161135d9190611f45565b60405180910390fd5b81156113c857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e10600480811115611454576114536127f7565b5b60f81b846000015185602001516040518463ffffffff1660e01b815260040161147f93929190612861565b6020604051808303816000875af115801561149e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c291906128b4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff166114ea8461063b565b73ffffffffffffffffffffffffffffffffffffffff160361154257826040517f868439130000000000000000000000000000000000000000000000000000000081526004016115399190611fdb565b60405180910390fd5b6000600760008581526020019081526020016000209050611561611c73565b82156115f15760005b84518110156115eb576115978582815181106115895761158861262b565b5b602002602001015188611945565b91508282908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050806115e49061265a565b905061156a565b50611663565b60005b8451811015611661576116218582815181106116135761161261262b565b5b602002602001015188611945565b9150816020015183828154811061163b5761163a61262b565b5b9060005260206000209060020201600101819055508061165a9061265a565b90506115f4565b505b8160076000878152602001908152602001600020908054611685929190611c8d565b50505050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e56004808111156116c0576116bf6127f7565b5b60f81b846040518363ffffffff1660e01b81526004016116e19291906128e1565b6020604051808303816000875af1158015611700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172491906128b4565b9050919050565b60008061173784611220565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461177957611778818486611978565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461180a576117bb60008560008061125d565b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461188d576001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61194d611c73565b61195683611a3c565b8160000181815250506119698383611ad9565b81602001818152505092915050565b611983838383611b98565b611a3757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119f857806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ef9190611fdb565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a2e92919061290a565b60405180910390fd5b505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c02600480811115611a6e57611a6d6127f7565b5b60f81b846040518363ffffffff1660e01b8152600401611a8f9291906128e1565b6020604051808303816000875af1158015611aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad291906128b4565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e68600480811115611b0b57611b0a6127f7565b5b60f81b8585604051602001611b20919061297b565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611b4d93929190612861565b6020604051808303816000875af1158015611b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9091906128b4565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611c5057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c115750611c108484610903565b5b80611c4f57508273ffffffffffffffffffffffffffffffffffffffff16611c3783610a99565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b604051806040016040528060008152602001606081525090565b604051806040016040528060008152602001600081525090565b828054828255906000526020600020906002028101928215611ce85760005260206000209160020282015b82811115611ce75782826000820154816000015560018201548160010155505091600201919060020190611cb8565b5b509050611cf59190611cf9565b5090565b5b80821115611d1c57600080820160009055600182016000905550600201611cfa565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d6981611d34565b8114611d7457600080fd5b50565b600081359050611d8681611d60565b92915050565b600060208284031215611da257611da1611d2a565b5b6000611db084828501611d77565b91505092915050565b60008115159050919050565b611dce81611db9565b82525050565b6000602082019050611de96000830184611dc5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e29578082015181840152602081019050611e0e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e5182611def565b611e5b8185611dfa565b9350611e6b818560208601611e0b565b611e7481611e35565b840191505092915050565b60006020820190508181036000830152611e998184611e46565b905092915050565b6000819050919050565b611eb481611ea1565b8114611ebf57600080fd5b50565b600081359050611ed181611eab565b92915050565b600060208284031215611eed57611eec611d2a565b5b6000611efb84828501611ec2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f2f82611f04565b9050919050565b611f3f81611f24565b82525050565b6000602082019050611f5a6000830184611f36565b92915050565b611f6981611f24565b8114611f7457600080fd5b50565b600081359050611f8681611f60565b92915050565b60008060408385031215611fa357611fa2611d2a565b5b6000611fb185828601611f77565b9250506020611fc285828601611ec2565b9150509250929050565b611fd581611ea1565b82525050565b6000602082019050611ff06000830184611fcc565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261201b5761201a611ff6565b5b8235905067ffffffffffffffff81111561203857612037611ffb565b5b60208301915083602082028301111561205457612053612000565b5b9250929050565b60008083601f84011261207157612070611ff6565b5b8235905067ffffffffffffffff81111561208e5761208d611ffb565b5b6020830191508360208202830111156120aa576120a9612000565b5b9250929050565b6000806000806000606086880312156120cd576120cc611d2a565b5b60006120db88828901611f77565b955050602086013567ffffffffffffffff8111156120fc576120fb611d2f565b5b61210888828901612005565b9450945050604086013567ffffffffffffffff81111561212b5761212a611d2f565b5b6121378882890161205b565b92509250509295509295909350565b60008060006060848603121561215f5761215e611d2a565b5b600061216d86828701611f77565b935050602061217e86828701611f77565b925050604061218f86828701611ec2565b9150509250925092565b6000602082840312156121af576121ae611d2a565b5b60006121bd84828501611f77565b91505092915050565b6121cf81611db9565b81146121da57600080fd5b50565b6000813590506121ec816121c6565b92915050565b6000806040838503121561220957612208611d2a565b5b600061221785828601611f77565b9250506020612228858286016121dd565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61226f82611e35565b810181811067ffffffffffffffff8211171561228e5761228d612237565b5b80604052505050565b60006122a1611d20565b90506122ad8282612266565b919050565b600067ffffffffffffffff8211156122cd576122cc612237565b5b6122d682611e35565b9050602081019050919050565b82818337600083830152505050565b6000612305612300846122b2565b612297565b90508281526020810184848401111561232157612320612232565b5b61232c8482856122e3565b509392505050565b600082601f83011261234957612348611ff6565b5b81356123598482602086016122f2565b91505092915050565b6000806000806080858703121561237c5761237b611d2a565b5b600061238a87828801611f77565b945050602061239b87828801611f77565b93505060406123ac87828801611ec2565b925050606085013567ffffffffffffffff8111156123cd576123cc611d2f565b5b6123d987828801612334565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b600061243661243161242c84611ea1565b612411565b611ea1565b9050919050565b6124468161241b565b82525050565b6000612458838361243d565b60208301905092915050565b6000602082019050919050565b600061247c826123e5565b61248681856123f0565b935061249183612401565b8060005b838110156124c25781516124a9888261244c565b97506124b483612464565b925050600181019050612495565b5085935050505092915050565b600060208201905081810360008301526124e98184612471565b905092915050565b6000806040838503121561250857612507611d2a565b5b600061251685828601611f77565b925050602061252785828601611f77565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061257857607f821691505b60208210810361258b5761258a612531565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125cb82611ea1565b91506125d683611ea1565b92508282019050808211156125ee576125ed612591565b5b92915050565b60006060820190506126096000830186611f36565b6126166020830185611fcc565b6126236040830184611f36565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061266582611ea1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361269757612696612591565b5b600182019050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126126ce576126cd6126a2565b5b80840192508235915067ffffffffffffffff8211156126f0576126ef6126a7565b5b60208301925060018202360383131561270c5761270b6126ac565b5b509250929050565b600081519050919050565b600082825260208201905092915050565b600061273b82612714565b612745818561271f565b9350612755818560208601611e0b565b61275e81611e35565b840191505092915050565b600060808201905061277e6000830187611f36565b61278b6020830186611f36565b6127986040830185611fcc565b81810360608301526127aa8184612730565b905095945050505050565b6000815190506127c481611d60565b92915050565b6000602082840312156127e0576127df611d2a565b5b60006127ee848285016127b5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61285b81612826565b82525050565b60006060820190506128766000830186612852565b6128836020830185611fcc565b81810360408301526128958184612730565b9050949350505050565b6000815190506128ae81611eab565b92915050565b6000602082840312156128ca576128c9611d2a565b5b60006128d88482850161289f565b91505092915050565b60006040820190506128f66000830185612852565b6129036020830184611fcc565b9392505050565b600060408201905061291f6000830185611f36565b61292c6020830184611fcc565b9392505050565b60008160601b9050919050565b600061294b82612933565b9050919050565b600061295d82612940565b9050919050565b61297561297082611f24565b612952565b82525050565b60006129878284612964565b6014820191508190509291505056fea26469706673582212208cdeb01bec0254e0d3577b17ee5106f337aacf5d342d5f4167c65e7e88c9327164736f6c63430008140033";

type PrivateERC721URIStorageMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateERC721URIStorageMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateERC721URIStorageMock__factory extends ContractFactory {
  constructor(...args: PrivateERC721URIStorageMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateERC721URIStorageMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PrivateERC721URIStorageMock__factory {
    return super.connect(runner) as PrivateERC721URIStorageMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateERC721URIStorageMockInterface {
    return new Interface(_abi) as PrivateERC721URIStorageMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateERC721URIStorageMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PrivateERC721URIStorageMock;
  }
}
