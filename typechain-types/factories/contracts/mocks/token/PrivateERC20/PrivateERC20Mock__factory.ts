/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PrivateERC20Mock,
  PrivateERC20MockInterface,
} from "../../../../../contracts/mocks/token/PrivateERC20/PrivateERC20Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "ownerValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "spenderValue",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "senderValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "accountEncryptionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "ownerCiphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "spenderCiphertext",
            type: "uint256",
          },
        ],
        internalType: "struct IPrivateERC20.Allowance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "reencryptAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offBoardAddress",
        type: "address",
      },
    ],
    name: "setAccountEncryptionAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020016f5072697661746545524332304d6f636b60801b81525060405180604001604052806005815260200164504532304d60d81b81525081600490816200006a919062000127565b50600562000079828262000127565b505050620001f3565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ad57607f821691505b602082108103620000ce57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012257600081815260208120601f850160051c81016020861015620000fd5750805b601f850160051c820191505b818110156200011e5782815560010162000109565b5050505b505050565b81516001600160401b0381111562000143576200014362000082565b6200015b8162000154845462000098565b84620000d4565b602080601f8311600181146200019357600084156200017a5750858301515b600019600386901b1c1916600185901b1785556200011e565b600085815260208120601f198616915b82811015620001c457888601518255948401946001909101908401620001a3565b5085821015620001e35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61178680620002036000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063313ce567116100cd57806396b2db3811610081578063a7d9ad6a11610066578063a7d9ad6a146102d2578063a9059cbb146102e5578063dd62ed3e146102f857600080fd5b806396b2db38146102ac578063a42c0af9146102bf57600080fd5b8063722713f7116100b2578063722713f7146102895780638269bcc31461029157806395d89b41146102a457600080fd5b8063313ce5671461024d57806370a082311461025c57600080fd5b806313691c761161012457806323b872dd1161010957806323b872dd1461021457806326a9b3f1146102275780632893c5b01461023a57600080fd5b806313691c76146101f857806318160ddd1461020d57600080fd5b8063043d20851461015657806306fdde031461019f57806308a2032a146101b4578063095ea7b3146101d5575b600080fd5b6101826101643660046112d8565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a761032d565b6040516101969190611339565b6101c76101c2366004611364565b6103bf565b604051908152602001610196565b6101e86101e33660046113c2565b6103f6565b6040519015158152602001610196565b61020b6102063660046113ec565b610410565b005b60006101c7565b6101c7610222366004611430565b610427565b6101e861023536600461146c565b610449565b61020b6102483660046113ec565b6104e3565b60405160068152602001610196565b6101c761026a3660046112d8565b6001600160a01b03166000908152600160208190526040909120015490565b6101c76104f5565b6101e861029f3660046112d8565b610505565b6101a761057c565b6101c76102ba36600461146c565b61058b565b6101e86102cd36600461149d565b6105f4565b6101c76102e036600461149d565b61061c565b6101c76102f33660046113c2565b610639565b61030b6103063660046114eb565b61064f565b6040805182518152602080840151908201529181015190820152606001610196565b60606004805461033c9061151e565b80601f01602080910402602001604051908101604052809291908181526020018280546103689061151e565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050505050905090565b600033816103d46103cf856115f4565b6106c1565b90506103e186838361076d565b6103ec868683610840565b9695505050505050565b6000336104048185856108d8565b60019150505b92915050565b6104228261041d83610a82565b610af2565b505050565b60003361043585828561076d565b610440858585610840565b95945050505050565b60008061045533610b4a565b905082156104a0573360009081526002602090815260408083206001600160a01b0388168452909152902080546104959061048f90610b73565b83610b90565b600190910155610404565b6001600160a01b0384166000908152600260209081526040808320338452909152902080546104d29061048f90610b73565b600290910155600191505092915050565b610422826104f083610a82565b610c75565b600061050033610cc6565b905090565b60008061051133610cc6565b33600090815260208190526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038616179055905061055d8184610b90565b3360009081526001602081905260409091208101919091559392505050565b60606005805461033c9061151e565b600081156105c7573360009081526002602090815260408083206001600160a01b03871684529091529020546105c090610b73565b905061040a565b6001600160a01b03831660009081526002602090815260408083203384529091529020546105c090610b73565b600033816106046103cf856115f4565b90506106118286836108d8565b506001949350505050565b6000338161062c6103cf856115f4565b9050610440828683610840565b600033610647818585610840565b949350505050565b61067360405180606001604052806000815260200160008152602001600081525090565b506001600160a01b0391821660009081526002602081815260408084209490951683529283529083902083516060810185528154815260018201549381019390935201549181019190915290565b805160208201516040517fe4f36e1000000000000000000000000000000000000000000000000000000000815260009260649263e4f36e109261072a927f04000000000000000000000000000000000000000000000000000000000000009290916004016116c8565b6020604051808303816000875af1158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040a9190611709565b6001600160a01b03831660009081526001602052604081205461078f90610b73565b6001600160a01b038086166000908152600260209081526040808320938816835292905290812054919250906107c490610b73565b905060006107e2826107dd67ffffffffffffffff610a82565b610ce8565b905060006107f08486610d68565b905060006107fe8487610d68565b90506000610828610818856108138686610d7d565b610d7d565b610822878a610d91565b87610da6565b90506108358989836108d8565b505050505050505050565b60006001600160a01b03841661088a576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6001600160a01b0383166108cd576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610881565b610647848484610e6b565b6001600160a01b03831661091b576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610881565b6001600160a01b03821661095e576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610881565b600061096982610fc9565b9050600061097685610b4a565b905060006109848483610b90565b905061098f85610b4a565b9150600061099d8584610b90565b905060405180606001604052808581526020018381526020018281525060026000896001600160a01b03166001600160a01b031681526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050856001600160a01b0316876001600160a01b03167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a78484604051610a71929190918252602082015260400190565b60405180910390a350505050505050565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b609060440161072a565b60006001600160a01b038316610b37576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610881565b610b4383600084610e6b565b9392505050565b6001600160a01b038082166000908152602081905260408120549091168061040a575090919050565b600081600003610b875761040a6000610a82565b61040a82611023565b60408051606083901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660208201528151601481830301815260348201928390527f3c6f0e6800000000000000000000000000000000000000000000000000000000909252600091606491633c6f0e6891610c32917f04000000000000000000000000000000000000000000000000000000000000009188916038016116c8565b6020604051808303816000875af1158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190611709565b60006001600160a01b038316610cba576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610881565b610b4360008484610e6b565b6001600160a01b038116600090815260016020526040812054610b4381610b73565b60006064637c12a1eb610cfd60048085611033565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905260448101859052606401610c32565b6000606463dd148693610cfd60048085611033565b6000606463fb7da35f610cfd838080611033565b6000606463371d1bf2610cfd60048085611033565b600060646320cc408d610dbb60048085611033565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810187905260448101869052606481018590526084016020604051808303816000875af1158015610e47573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190611709565b6000808281610e7a6001611090565b90506001600160a01b038716610ed1576000610e97600354610b73565b9050610ea381876110ef565b9050610eae81610fc9565b6003556000610ebc88610cc6565b9050610ec881886110ef565b94505050610f19565b6000610edc88610cc6565b90506000610ee988610cc6565b90506000610ef883838a611104565b90975094509050610f098a826111c2565b610f138683610d91565b94505050505b6001600160a01b038616610f54576000610f34600354610b73565b9050610f408184610d91565b9050610f4b81610fc9565b60035550610f5e565b610f5e86846111c2565b856001600160a01b0316876001600160a01b03167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44610f9d858b610b90565b610fa7868b610b90565b6040805192835260208301919091520160405180910390a39695505050505050565b6000606463c50c9c0260045b60f81b846040518363ffffffff1660e01b815260040161072a9291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6000606463d2c135e56004610fd5565b600081600281111561104757611047611699565b60ff16600884600481111561105e5761105e611699565b61ffff16901b61ffff16601086600481111561107c5761107c611699565b62ffffff16901b171760e81b949350505050565b6000808261109f5760006110a2565b60015b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081526000600482015260ff9190911660248201819052915060649063d9b60b6090604401610c32565b60006064638c5d0150610cfd60048085611033565b6000808080808060646356c72d2861111f6004808086611208565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602481018c9052604481018b9052606481018a90526084016060604051808303816000875af115801561118c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b09190611722565b919b909a509098509650505050505050565b60006111cd83610b4a565b90506111d98282611288565b6001600160a01b0390931660009081526001602081815260409092208551815594909101519301929092555050565b600081600281111561121c5761121c611699565b60ff16600884600481111561123357611233611699565b61ffff16901b61ffff16601086600481111561125157611251611699565b62ffffff16901b62ffffff16601888600481111561127157611271611699565b63ffffffff16901b17171760e01b95945050505050565b60408051808201909152600080825260208201526112a583610fc9565b81526112b18383610b90565b602082015292915050565b80356001600160a01b03811681146112d357600080fd5b919050565b6000602082840312156112ea57600080fd5b610b43826112bc565b6000815180845260005b81811015611319576020818501810151868301820152016112fd565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b4360208301846112f3565b60006040828403121561135e57600080fd5b50919050565b60008060006060848603121561137957600080fd5b611382846112bc565b9250611390602085016112bc565b9150604084013567ffffffffffffffff8111156113ac57600080fd5b6113b88682870161134c565b9150509250925092565b600080604083850312156113d557600080fd5b6113de836112bc565b946020939093013593505050565b600080604083850312156113ff57600080fd5b611408836112bc565b9150602083013567ffffffffffffffff8116811461142557600080fd5b809150509250929050565b60008060006060848603121561144557600080fd5b61144e846112bc565b925061145c602085016112bc565b9150604084013590509250925092565b6000806040838503121561147f57600080fd5b611488836112bc565b91506020830135801515811461142557600080fd5b600080604083850312156114b057600080fd5b6114b9836112bc565b9150602083013567ffffffffffffffff8111156114d557600080fd5b6114e18582860161134c565b9150509250929050565b600080604083850312156114fe57600080fd5b611507836112bc565b9150611515602084016112bc565b90509250929050565b600181811c9082168061153257607f821691505b60208210810361135e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156115bd576115bd61156b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156115ec576115ec61156b565b604052919050565b60006040823603121561160657600080fd5b61160e61159a565b8235815260208084013567ffffffffffffffff8082111561162e57600080fd5b9085019036601f83011261164157600080fd5b8135818111156116535761165361156b565b61166584601f19601f840116016115c3565b9150808252368482850101111561167b57600080fd5b80848401858401376000908201840152918301919091525092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7fff000000000000000000000000000000000000000000000000000000000000008416815282602082015260606040820152600061044060608301846112f3565b60006020828403121561171b57600080fd5b5051919050565b60008060006060848603121561173757600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220b75879a1e3845a3ed50baa3563b8756e66d2e5abce0f5fdfb4a8d418b836bb6964736f6c63430008140033";

type PrivateERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateERC20Mock__factory extends ContractFactory {
  constructor(...args: PrivateERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateERC20Mock__factory {
    return super.connect(runner) as PrivateERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateERC20MockInterface {
    return new Interface(_abi) as PrivateERC20MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateERC20Mock {
    return new Contract(address, _abi, runner) as unknown as PrivateERC20Mock;
  }
}
