/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  DataPrivacyFrameworkMock,
  DataPrivacyFrameworkMockInterface,
} from "../../../../../contracts/mocks/access/DataPrivacyFramework/DataPrivacyFrameworkMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESS_ALL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRING_ALL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activePermissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
    ],
    name: "addAllowedOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
    ],
    name: "addRestrictedOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addressDefaultPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "allowedOperations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "falseKey",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "trueKey",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestampBefore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestampAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uintParameter",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addressParameter",
        type: "address",
      },
      {
        internalType: "string",
        name: "stringParameter",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chunkSize",
        type: "uint256",
      },
    ],
    name: "getConditions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "string",
            name: "operation",
            type: "string",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "falseKey",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "trueKey",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestampBefore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestampAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uintParameter",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addressParameter",
            type: "address",
          },
          {
            internalType: "string",
            name: "stringParameter",
            type: "string",
          },
        ],
        internalType: "struct DataPrivacyFramework.Condition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConditionsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "uintParameter",
        type: "uint256",
      },
    ],
    name: "isOperationAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
    ],
    name: "isOperationAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        internalType: "string",
        name: "stringParameter",
        type: "string",
      },
    ],
    name: "isOperationAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        internalType: "address",
        name: "addressParameter",
        type: "address",
      },
    ],
    name: "isOperationAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operationDefaultPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
    ],
    name: "removeAllowedOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "operation",
        type: "string",
      },
    ],
    name: "removeRestrictedOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "restrictedOperations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "defaultPermission",
        type: "bool",
      },
    ],
    name: "setAddressDefaultPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "defaultPermission",
        type: "bool",
      },
    ],
    name: "setOperationDefaultPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "string",
            name: "operation",
            type: "string",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestampBefore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestampAfter",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "falseKey",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "trueKey",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "uintParameter",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addressParameter",
            type: "address",
          },
          {
            internalType: "string",
            name: "stringParameter",
            type: "string",
          },
        ],
        internalType: "struct DataPrivacyFramework.InputData",
        name: "inputData",
        type: "tuple",
      },
    ],
    name: "setPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type DataPrivacyFrameworkMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataPrivacyFrameworkMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataPrivacyFrameworkMock__factory extends ContractFactory {
  constructor(...args: DataPrivacyFrameworkMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataPrivacyFrameworkMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataPrivacyFrameworkMock__factory {
    return super.connect(runner) as DataPrivacyFrameworkMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataPrivacyFrameworkMockInterface {
    return new Interface(_abi) as DataPrivacyFrameworkMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataPrivacyFrameworkMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataPrivacyFrameworkMock;
  }
}
