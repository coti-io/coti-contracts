/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  SignedDivision,
  SignedDivisionInterface,
} from "../../../../../contracts/mocks/utils/mpc/SignedDivision";

const _abi = [
  {
    inputs: [],
    name: "boolResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "divResult",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int8",
        name: "a",
        type: "int8",
      },
      {
        internalType: "int8",
        name: "b",
        type: "int8",
      },
    ],
    name: "divTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610693806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639e54261014610046578063a96ac1621461006a578063f8fd9b9f1461008c575b600080fd5b60008054610052910b81565b60405160009190910b81526020015b60405180910390f35b60005461007c90610100900460ff1681565b6040519015158152602001610061565b61009f61009a3660046105e2565b6100a1565b005b6100c36100be6100b0846100f9565b6100b9846100f9565b6101a7565b610311565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff929092169190911790555050565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b60906044015b6020604051808303816000875af115801561017d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a19190610644565b92915050565b6000806101ee6101df856101da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806100f9565b610378565b6101e960006100f9565b61043d565b905060006102226101df856101da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff806100f9565b905060006102748361026e61025f8961025a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100f9565b610452565b61026960016100f9565b610467565b8861047c565b905060006102ac8361026e61025f8961025a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100f9565b905060006102ba8383610549565b905060006102c8868661055e565b905061030481836102ff61025f8661025a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100f9565b61047c565b9998505050505050505050565b6040517f0cfed5610000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260248101829052600090606490630cfed5619060440161015e565b6000606463fe9c73d161038d6001808561056e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260248101869052604481018590526064016020604051808303816000875af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610644565b9392505050565b60006064637c12a1eb61038d6001808561056e565b60006064636f962e2c61038d6001808561056e565b60006064638c5d015061038d6001808561056e565b600060646320cc408d6104916001808561056e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810187905260448101869052606481018590526084016020604051808303816000875af115801561051d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105419190610644565b949350505050565b60006064634e9ba4b561038d6001808561056e565b60006064636f962e2c61038d8380805b600081600281111561058257610582610615565b60ff16600884600481111561059957610599610615565b61ffff16901b61ffff1660108660048111156105b7576105b7610615565b62ffffff16901b171760e81b949350505050565b8035600081900b81146105dd57600080fd5b919050565b600080604083850312156105f557600080fd5b6105fe836105cb565b915061060c602084016105cb565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561065657600080fd5b505191905056fea2646970667358221220f5188f374c30c185e407418bae5cb2694d350ee397168b1cf8498de1cb103d5264736f6c63430008130033";

type SignedDivisionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedDivisionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedDivision__factory extends ContractFactory {
  constructor(...args: SignedDivisionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SignedDivision & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SignedDivision__factory {
    return super.connect(runner) as SignedDivision__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedDivisionInterface {
    return new Interface(_abi) as SignedDivisionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignedDivision {
    return new Contract(address, _abi, runner) as unknown as SignedDivision;
  }
}
