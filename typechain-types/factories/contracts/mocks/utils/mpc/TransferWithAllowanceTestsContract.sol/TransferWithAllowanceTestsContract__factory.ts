/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  TransferWithAllowanceTestsContract,
  TransferWithAllowanceTestsContractInterface,
} from "../../../../../../contracts/mocks/utils/mpc/TransferWithAllowanceTestsContract.sol/TransferWithAllowanceTestsContract";

const _abi = [
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "allowance",
        type: "uint8",
      },
    ],
    name: "transferWithAllowanceTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610936806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634717f97c1461003b578063eae36abd1461008c575b600080fd5b60005460ff80821691610100810482169162010000820481169163010000009004165b6040805160ff9586168152938516602085015291151583830152909216606082015290519081900360800190f35b61005e61009a36600461082e565b6000806000806100e860405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61011d6040518060a0016040528060008152602001600081526020016000815260200160008152602001600060ff1681525090565b6101526040518060a0016040528060008152602001600081526020016000815260200160008152602001600060ff1681525090565b61015b8b61039c565b83526101668a61039c565b602084015261017760ff8c1661044a565b604084015261018860ff8b1661044a565b606084015261019960ff8c166104b4565b60808401526101aa60ff8b166104b4565b60a08401526101bb60ff8c16610520565b60c08401526101cc60ff8b16610520565b60e08401526101da8961039c565b82526101e860ff8a1661044a565b60208301526101f960ff8a166104b4565b604083015261020a60ff8a16610520565b606083015260ff891660808301526102218861039c565b815261022f60ff891661044a565b602082015261024060ff89166104b4565b604082015261025160ff8916610520565b606082015260ff88166080820152825160208401518351835160009384938493849361027f93929190610590565b93509350935093506102908461067b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff929092169190911790556102cb8361067b565b600060016101000a81548160ff021916908360ff1602179055506102ee826106e2565b6000805491151562010000027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff90921691909117905561032d8161067b565b6000805460ff92831663010000009081027fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff83168117938490558416918416919091179d50610100820483169c5062010000820483169b50900416975050505050505050945094509450949050565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b60906044015b6020604051808303816000875af1158015610420573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044491906108b1565b92915050565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0200000000000000000000000000000000000000000000000000000000000000600482015261ffff8216602482015260009060649063d9b60b6090604401610401565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0300000000000000000000000000000000000000000000000000000000000000600482015263ffffffff8216602482015260009060649063d9b60b6090604401610401565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b6090604401610401565b600080808080808080606463c2ff267a6105ae600180808087610773565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffffffff0000000000000000000000000000000000000000000000000000009091166004820152602481018f9052604481018e9052606481018d9052608481018c905260a4016080604051808303816000875af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066591906108ca565b929f919e509c50909a5098505050505050505050565b6040517f0cfed5610000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260248101829052600090606490630cfed56190604401610401565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015610746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076a91906108b1565b15159392505050565b600081600281111561078757610787610882565b60ff16600884600481111561079e5761079e610882565b61ffff16901b61ffff1660108660048111156107bc576107bc610882565b62ffffff16901b62ffffff1660188860048111156107dc576107dc610882565b63ffffffff16901b63ffffffff1660208a60048111156107fe576107fe610882565b64ffffffffff16901b1717171760d81b9695505050505050565b803560ff8116811461082957600080fd5b919050565b6000806000806080858703121561084457600080fd5b61084d85610818565b935061085b60208601610818565b925061086960408601610818565b915061087760608601610818565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082840312156108c357600080fd5b5051919050565b600080600080608085870312156108e057600080fd5b50508251602084015160408501516060909501519196909550909250905056fea26469706673582212201629acc2e307bcf2a0c9f22498849a2bb48fcabbb1d406aeca4a86f190acdf4964736f6c63430008140033";

type TransferWithAllowanceTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferWithAllowanceTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferWithAllowanceTestsContract__factory extends ContractFactory {
  constructor(...args: TransferWithAllowanceTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferWithAllowanceTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TransferWithAllowanceTestsContract__factory {
    return super.connect(runner) as TransferWithAllowanceTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferWithAllowanceTestsContractInterface {
    return new Interface(_abi) as TransferWithAllowanceTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransferWithAllowanceTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TransferWithAllowanceTestsContract;
  }
}
