/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Comparison2TestsContract,
  Comparison2TestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/Comparison2TestsContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtBool",
            name: "res16_16",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res8_16",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res16_8",
            type: "uint256",
          },
        ],
        internalType: "struct Comparison2TestsContract.Check16",
        name: "check16",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults16",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtBool",
            name: "res32_32",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res8_32",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res32_8",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res16_32",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res32_16",
            type: "uint256",
          },
        ],
        internalType: "struct Comparison2TestsContract.Check32",
        name: "check32",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults32",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtBool",
            name: "res64_64",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res8_64",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res64_8",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res16_64",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res64_16",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res32_64",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "res64_32",
            type: "uint256",
          },
        ],
        internalType: "struct Comparison2TestsContract.Check64",
        name: "check64",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults64",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "eqTest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "geTest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEqResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGeResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNeResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "neTest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtBool",
            name: "aBool_s",
            type: "uint256",
          },
          {
            internalType: "gtBool",
            name: "bBool_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct Comparison2TestsContract.AllGTCastingValues",
        name: "castingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "setPublicValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612885806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806370eb37ee116100765780639a0c13d81161005b5780639a0c13d814610155578063acb3816914610160578063bc3aa1ed1461017357600080fd5b806370eb37ee1461012f57806380f937bc1461014257600080fd5b80632e544aa0116100a75780632e544aa0146100f65780632fd37f4b146101095780636b04608f1461011a57600080fd5b80630d980bf0146100c35780631988e322146100e3575b600080fd5b600054610100900460ff165b604051901515815260200160405180910390f35b6100cf6100f1366004612503565b610186565b6100cf610104366004612587565b6107e6565b60005462010000900460ff166100cf565b61012d61012836600461260a565b6108c4565b005b6100cf61013d366004612503565b610979565b6100cf6101503660046126c5565b610fd1565b60005460ff166100cf565b6100cf61016e366004612770565b611076565b6100cf610181366004612503565b6110e5565b60006101de604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61020260405180606001604052806000815260200160008152602001600081525090565b6102346040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6102746040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61027f8488886108c4565b600061029b61029686604001518760600151611741565b611807565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff166201000083151502179055608086015160a08701519192506102e291611898565b8452604085015160a08601516102f891906118ad565b60208501526080850151606086015161031191906118c3565b60408501526000610321856107e6565b90508115158115151461037b5760405162461bcd60e51b815260206004820152601660248201527f6765546573743a2063617374203136206661696c65640000000000000000000060448201526064015b60405180910390fd5b61038d8660c001518760e001516118d9565b8452604086015160e08701516103a391906118ee565b602085015260c086015160608701516103bc9190611904565b6040850152608086015160e08701516103d5919061191a565b606085015260c086015160a08701516103ee9190611930565b608085015260006103fe85611076565b9050801515831515146104535760405162461bcd60e51b815260206004820152601660248201527f6765546573743a2063617374203332206661696c6564000000000000000000006044820152606401610372565b610467876101000151886101200151611946565b8452604087015161012088015161047e919061195b565b602085015261010087015160608801516104989190611971565b604085015260808701516101208801516104b29190611987565b606085015261010087015160a08801516104cc919061199d565b608085015260c08701516101208801516104e691906119b3565b60a085015261010087015160e088015161050091906119c9565b60c0850152600061051085610fd1565b9050801515841515146105655760405162461bcd60e51b815260206004820152601660248201527f6765546573743a2063617374203634206661696c6564000000000000000000006044820152606401610372565b6105766102968c8a606001516119df565b151584151514801561059b575061059461029689604001518c611a61565b1515841515145b61060d5760405162461bcd60e51b815260206004820152602660248201527f6765546573743a2074657374203820626974732077697468207363616c61722060448201527f6661696c656400000000000000000000000000000000000000000000000000006064820152608401610372565b6106216102968c60ff168a60a00151611ae4565b1515841515148015610649575061064261029689608001518c60ff16611b68565b1515841515145b6106a55760405162461bcd60e51b815260206004820152602760248201527f6765546573743a207465737420313620626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b6106b96102968c60ff168a60e00151611beb565b15158415151480156106e157506106da6102968960c001518c60ff16611c71565b1515841515145b61073d5760405162461bcd60e51b815260206004820152602760248201527f6765546573743a207465737420333220626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b6107526102968c60ff168a6101200151611cf7565b151584151514801561077b57506107746102968961010001518c60ff16611d81565b1515841515145b6107d75760405162461bcd60e51b815260206004820152602760248201527f6765546573743a207465737420363420626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b50919998505050505050505050565b6000806107f68360000151611807565b90506108058360200151611807565b1515811515148015610826575061081f8360400151611807565b1515811515145b6108be5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a401610372565b92915050565b6108d58160ff168360ff1611611e0b565b83526108e860ff80841690831611611e0b565b60208401526108f682611e6a565b604084015261090481611e6a565b606084015261091560ff8316611f12565b608084015261092660ff8216611f12565b60a084015261093760ff8316611f7c565b60c084015261094860ff8216611f7c565b60e084015261095960ff8316611fe8565b61010084015261096b60ff8216611fe8565b610120909301929092525050565b60006109d1604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6109f560405180606001604052806000815260200160008152602001600081525090565b610a276040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b610a676040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610a728488886108c4565b610a8761029685600001518660200151612058565b506000610a9f6102968660400151876060015161206c565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016821515179055608086015160a0870151919250610ae191612081565b8452604085015160a0860151610af79190612096565b602085015260808501516060860151610b1091906120ac565b60408501526000610b20856107e6565b905081151581151514610b755760405162461bcd60e51b815260206004820152601660248201527f6571546573743a2063617374203136206661696c6564000000000000000000006044820152606401610372565b610b878660c001518760e001516120c2565b8452604086015160e0870151610b9d91906120d7565b602085015260c08601516060870151610bb691906120ed565b6040850152608086015160e0870151610bcf9190612103565b606085015260c086015160a0870151610be89190612119565b60808501526000610bf885611076565b905080151583151514610c4d5760405162461bcd60e51b815260206004820152601660248201527f6571546573743a2063617374203332206661696c6564000000000000000000006044820152606401610372565b610c6187610100015188610120015161212f565b84526040870151610120880151610c789190612144565b60208501526101008701516060880151610c92919061215a565b60408501526080870151610120880151610cac9190612170565b606085015261010087015160a0880151610cc69190612186565b608085015260c0870151610120880151610ce0919061219c565b60a085015261010087015160e0880151610cfa91906121b2565b60c08501526000610d0a85610fd1565b905080151584151514610d5f5760405162461bcd60e51b815260206004820152601660248201527f6571546573743a2063617374203634206661696c6564000000000000000000006044820152606401610372565b610d706102968c8a606001516121c8565b1515841515148015610d955750610d8e61029689604001518c6121dd565b1515841515145b610e075760405162461bcd60e51b815260206004820152602660248201527f6571546573743a2074657374203820626974732077697468207363616c61722060448201527f6661696c656400000000000000000000000000000000000000000000000000006064820152608401610372565b610e1b6102968c60ff168a60a001516121f3565b1515841515148015610e435750610e3c61029689608001518c60ff16612209565b1515841515145b610e9f5760405162461bcd60e51b815260206004820152602760248201527f6571546573743a207465737420313620626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b610eb36102968c60ff168a60e0015161221e565b1515841515148015610edb5750610ed46102968960c001518c60ff16612234565b1515841515145b610f375760405162461bcd60e51b815260206004820152602760248201527f6571546573743a207465737420333220626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b610f4c6102968c60ff168a610120015161224a565b1515841515148015610f755750610f6e6102968961010001518c60ff16612260565b1515841515145b6107d75760405162461bcd60e51b815260206004820152602760248201527f6571546573743a207465737420363420626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b600080610fe18360000151611807565b9050610ff08360200151611807565b1515811515148015611011575061100a8360400151611807565b1515811515145b801561102c57506110258360800151611807565b1515811515145b801561104757506110408360600151611807565b1515811515145b8015611062575061105b8360c00151611807565b1515811515145b8015610826575061081f8360a00151611807565b6000806110868360000151611807565b90506110958360200151611807565b15158115151480156110b657506110af8360400151611807565b1515811515145b80156110d157506110ca8360800151611807565b1515811515145b8015610826575061081f8360600151611807565b600061113d604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61116160405180606001604052806000815260200160008152602001600081525090565b6111936040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6111d36040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6111de8488886108c4565b6111f361029685600001518660200151612276565b50600061120b6102968660400151876060015161228a565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010083151502179055608086015160a08701519192506112519161229f565b8452604085015160a086015161126791906122b4565b60208501526080850151606086015161128091906122ca565b60408501526000611290856107e6565b9050811515811515146112e55760405162461bcd60e51b815260206004820152601660248201527f6e65546573743a2063617374203136206661696c6564000000000000000000006044820152606401610372565b6112f78660c001518760e001516122e0565b8452604086015160e087015161130d91906122f5565b602085015260c08601516060870151611326919061230b565b6040850152608086015160e087015161133f9190612321565b606085015260c086015160a08701516113589190612337565b6080850152600061136885611076565b9050801515831515146113bd5760405162461bcd60e51b815260206004820152601660248201527f6e65546573743a2063617374203332206661696c6564000000000000000000006044820152606401610372565b6113d187610100015188610120015161234d565b845260408701516101208801516113e89190612362565b602085015261010087015160608801516114029190612378565b6040850152608087015161012088015161141c919061238e565b606085015261010087015160a088015161143691906123a4565b608085015260c087015161012088015161145091906123ba565b60a085015261010087015160e088015161146a91906123d0565b60c0850152600061147a85610fd1565b9050801515841515146114cf5760405162461bcd60e51b815260206004820152601660248201527f6e65546573743a2063617374203634206661696c6564000000000000000000006044820152606401610372565b6114e06102968c8a606001516123e6565b151584151514801561150557506114fe61029689604001518c6123fb565b1515841515145b6115775760405162461bcd60e51b815260206004820152602660248201527f6e65546573743a2074657374203820626974732077697468207363616c61722060448201527f6661696c656400000000000000000000000000000000000000000000000000006064820152608401610372565b61158b6102968c60ff168a60a00151612411565b15158415151480156115b357506115ac61029689608001518c60ff16612427565b1515841515145b61160f5760405162461bcd60e51b815260206004820152602760248201527f6e65546573743a207465737420313620626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b6116236102968c60ff168a60e0015161243c565b151584151514801561164b57506116446102968960c001518c60ff16612452565b1515841515145b6116a75760405162461bcd60e51b815260206004820152602760248201527f6e65546573743a207465737420333220626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b6116bc6102968c60ff168a6101200151612468565b15158415151480156116e557506116de6102968961010001518c60ff1661247e565b1515841515145b6107d75760405162461bcd60e51b815260206004820152602760248201527f6e65546573743a207465737420363420626974732077697468207363616c61726044820152660819985a5b195960ca1b6064820152608401610372565b6000606463813b207461175660018085612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260248101869052604481018590526064015b6020604051808303816000875af11580156117dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118009190612807565b9392505050565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af115801561186b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188f9190612807565b15159392505050565b6000606463813b207461175660028085612490565b6000606463813b20746117566001600285612490565b6000606463813b20746117566002600185612490565b6000606463813b207461175660038085612490565b6000606463813b20746117566001600385612490565b6000606463813b20746117566003600185612490565b6000606463813b20746117566002600385612490565b6000606463813b20746117566003600285612490565b6000606463813b207461175660048085612490565b6000606463813b20746117566001600485612490565b6000606463813b20746117566004600185612490565b6000606463813b20746117566002600485612490565b6000606463813b20746117566004600285612490565b6000606463813b20746117566003600485612490565b6000606463813b20746117566004600385612490565b6000606463813b20746119f460018080612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015260ff86166024820152604481018590526064016117bd565b6000606463813b2074611a776001806002612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905260ff851660448201526064016117bd565b6000606463813b2074611afa6002806001612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015261ffff86166024820152604481018590526064016117bd565b6000606463813b2074611b7d60028080612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905261ffff851660448201526064016117bd565b6000606463813b2074611c016003806001612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015263ffffffff86166024820152604481018590526064016117bd565b6000606463813b2074611c876003806002612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905263ffffffff851660448201526064016117bd565b6000606463813b2074611d0d6004806001612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff0000000000000000000000000000000000000000000000000000000000909116600482015267ffffffffffffffff86166024820152604481018590526064016117bd565b6000606463813b2074611d976004806002612490565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905267ffffffffffffffff851660448201526064016117bd565b60008082611e1a576000611e1d565b60015b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081526000600482015260ff9190911660248201819052915060649063d9b60b60906044016117bd565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b60906044015b6020604051808303816000875af1158015611eee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190612807565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0200000000000000000000000000000000000000000000000000000000000000600482015261ffff8216602482015260009060649063d9b60b6090604401611ecf565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0300000000000000000000000000000000000000000000000000000000000000600482015263ffffffff8216602482015260009060649063d9b60b6090604401611ecf565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b6090604401611ecf565b60006064637c12a1eb611756838080612490565b60006064637c12a1eb61175660018085612490565b60006064637c12a1eb61175660028085612490565b60006064637c12a1eb6117566001600285612490565b60006064637c12a1eb6117566002600185612490565b60006064637c12a1eb61175660038085612490565b60006064637c12a1eb6117566001600385612490565b60006064637c12a1eb6117566003600185612490565b60006064637c12a1eb6117566002600385612490565b60006064637c12a1eb6117566003600285612490565b60006064637c12a1eb61175660048085612490565b60006064637c12a1eb6117566001600485612490565b60006064637c12a1eb6117566004600185612490565b60006064637c12a1eb6117566002600485612490565b60006064637c12a1eb6117566004600285612490565b60006064637c12a1eb6117566003600485612490565b60006064637c12a1eb6117566004600385612490565b60006064637c12a1eb6119f460018080612490565b60006064637c12a1eb611a776001806002612490565b60006064637c12a1eb611afa6002806001612490565b60006064637c12a1eb611b7d60028080612490565b60006064637c12a1eb611c016003806001612490565b60006064637c12a1eb611c876003806002612490565b60006064637c12a1eb611d0d6004806001612490565b60006064637c12a1eb611d976004806002612490565b600060646342094c56611756838080612490565b600060646342094c5661175660018085612490565b600060646342094c5661175660028085612490565b600060646342094c566117566001600285612490565b600060646342094c566117566002600185612490565b600060646342094c5661175660038085612490565b600060646342094c566117566001600385612490565b600060646342094c566117566003600185612490565b600060646342094c566117566002600385612490565b600060646342094c566117566003600285612490565b600060646342094c5661175660048085612490565b600060646342094c566117566001600485612490565b600060646342094c566117566004600185612490565b600060646342094c566117566002600485612490565b600060646342094c566117566004600285612490565b600060646342094c566117566003600485612490565b600060646342094c566117566004600385612490565b600060646342094c566119f460018080612490565b600060646342094c56611a776001806002612490565b600060646342094c56611afa6002806001612490565b600060646342094c56611b7d60028080612490565b600060646342094c56611c016003806001612490565b600060646342094c56611c876003806002612490565b600060646342094c56611d0d6004806001612490565b600060646342094c56611d9760048060025b60008160028111156124a4576124a4612820565b60ff1660088460048111156124bb576124bb612820565b61ffff16901b61ffff1660108660048111156124d9576124d9612820565b62ffffff16901b171760e81b949350505050565b803560ff811681146124fe57600080fd5b919050565b6000806040838503121561251657600080fd5b61251f836124ed565b915061252d602084016124ed565b90509250929050565b604051610140810167ffffffffffffffff81118282101715612581577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b60006060828403121561259957600080fd5b6040516060810181811067ffffffffffffffff821117156125e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80604052508235815260208301356020820152604083013560408201528091505092915050565b600080600083850361018081121561262157600080fd5b6101408082121561263157600080fd5b612639612536565b9150853582526020860135602083015260408601356040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e08301526101008087013581840152506101208087013581840152508194506126ab8187016124ed565b935050506126bc61016085016124ed565b90509250925092565b600060e082840312156126d757600080fd5b60405160e0810181811067ffffffffffffffff82111715612721577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b600060a0828403121561278257600080fd5b60405160a0810181811067ffffffffffffffff821117156127cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b60006020828403121561281957600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122013655344e23dbfa29233e7a3a5179b5a1d197727df4427d1d618d3c69cf0c6dd64736f6c63430008140033";

type Comparison2TestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Comparison2TestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Comparison2TestsContract__factory extends ContractFactory {
  constructor(...args: Comparison2TestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Comparison2TestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Comparison2TestsContract__factory {
    return super.connect(runner) as Comparison2TestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Comparison2TestsContractInterface {
    return new Interface(_abi) as Comparison2TestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Comparison2TestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Comparison2TestsContract;
  }
}
