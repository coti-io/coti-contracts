/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MiscellaneousTestsContract,
  MiscellaneousTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/MiscellaneousTestsContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint16",
            name: "res16_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res8_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res16_8",
            type: "uint256",
          },
        ],
        internalType: "struct MiscellaneousTestsContract.Check16",
        name: "check16",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint32",
            name: "res32_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res8_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_8",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res16_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_16",
            type: "uint256",
          },
        ],
        internalType: "struct MiscellaneousTestsContract.Check32",
        name: "check32",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint64",
            name: "res64_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res8_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_8",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res16_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_16",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res32_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_32",
            type: "uint256",
          },
        ],
        internalType: "struct MiscellaneousTestsContract.Check64",
        name: "check64",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "divTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoolResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDivResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMuxResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "selectionBit",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "muxTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "a",
        type: "bool",
      },
    ],
    name: "notTest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "remTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct MiscellaneousTestsContract.AllGTCastingValues",
        name: "castingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "setPublicValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612d9f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806392bba35611610081578063acb381691161005b578063acb38169146101c7578063d74e55e7146101ef578063ebb571fd1461020057600080fd5b806392bba3561461018f578063a103e4c0146101a1578063a609476a146101b457600080fd5b8063690ec3d9116100b2578063690ec3d91461012d5780636c74e7141461015057806380f937bc1461016357600080fd5b80632684f863146100d95780632e544aa0146100f75780632e5dda1e1461011d575b600080fd5b60005460ff165b60405160ff90911681526020015b60405180910390f35b61010a610105366004612a0b565b610215565b60405161ffff90911681526020016100ee565b600054610100900460ff166100e0565b61014061013b366004612aa3565b610300565b60405190151581526020016100ee565b6100e061015e366004612acf565b610367565b610176610171366004612b12565b610a26565b60405167ffffffffffffffff90911681526020016100ee565b6000546301000000900460ff16610140565b6100e06101af366004612bbd565b610bc9565b6100e06101c2366004612bbd565b61124a565b6101da6101d5366004612bf0565b6118b8565b60405163ffffffff90911681526020016100ee565b60005462010000900460ff166100e0565b61021361020e366004612c87565b6119e5565b005b6000806102258360000151611a6c565b90506102348360200151611a6c565b61ffff168161ffff1614801561025d57506102528360400151611a6c565b61ffff168161ffff16145b6102fa5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b92915050565b60008061030c83611b09565b9050600061031982611bae565b905061032481611bbd565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff1663010000009215158302179081905560ff91900416949350505050565b60006103b160405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6103d560405180606001604052806000815260200160008152602001600081525090565b6104076040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6104476040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6104528488886119e5565b600061045d89611b09565b9050600061047c6104778388600001518960200151611c4e565b611cec565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff166201000060ff841602179055604087015160608801519192506104c791849190611cfc565b8552855160608701516104db918491611d11565b8560200181815250506104f78287604001518860200151611d27565b6040860152600061050786610215565b90508160ff168161ffff161461055f5760405162461bcd60e51b815260206004820152601760248201527f6d7578546573743a2063617374203136206661696c656400000000000000000060448201526064016102f1565b6105728388608001518960a00151611d3d565b8552865160a0880151610586918591611d52565b8560200181815250506105a28388608001518960200151611d68565b8560400181815250506105be8388604001518960a00151611d7e565b8560600181815250506105da8388608001518960600151611d94565b608086015260006105ea866118b8565b90508063ffffffff168360ff16146106445760405162461bcd60e51b815260206004820152601760248201527f6d7578546573743a2063617374203332206661696c656400000000000000000060448201526064016102f1565b610657848960c001518a60e00151611daa565b8552875160e089015161066b918691611dbf565b856020018181525050610687848960c001518a60200151611dd5565b8560400181815250506106a38489604001518a60e00151611deb565b8560600181815250506106bf848960c001518a60600151611e01565b8560800181815250506106db8489608001518a60e00151611e17565b8560a00181815250506106f7848960c001518a60a00151611e2d565b60c0860152600061070786610a26565b90508067ffffffffffffffff168460ff16146107655760405162461bcd60e51b815260206004820152601760248201527f6d7578546573743a2063617374203634206661696c656400000000000000000060448201526064016102f1565b610777610477868e8c60200151611e43565b60ff168460ff161480156107a15750610798610477868b600001518e611e9c565b60ff168460ff16145b6108135760405162461bcd60e51b815260206004820152602760248201527f6d7578546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102f1565b61082d610828868e60ff168c60600151611ef6565b611a6c565b61ffff168460ff1614801561085c5750610852610828868b604001518e60ff16611f51565b61ffff168460ff16145b6108b95760405162461bcd60e51b815260206004820152602860248201527f6d7578546573743a207465737420313620626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b6108d36108ce868e60ff168c60a00151611fab565b612008565b63ffffffff168460ff1614801561090657506108fa6108ce868b608001518e60ff16612018565b63ffffffff168460ff16145b6109635760405162461bcd60e51b815260206004820152602860248201527f6d7578546573743a207465737420333220626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b61097d610978868e60ff168c60e00151612075565b6120d6565b67ffffffffffffffff168460ff161480156109b857506109a8610978868b60c001518e60ff166120e6565b67ffffffffffffffff168460ff16145b610a155760405162461bcd60e51b815260206004820152602860248201527f6d7578546573743a207465737420363420626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b50919b9a5050505050505050505050565b600080610a3683600001516120d6565b9050610a4583602001516120d6565b67ffffffffffffffff168167ffffffffffffffff16148015610a865750610a6f83604001516120d6565b67ffffffffffffffff168167ffffffffffffffff16145b8015610ab15750610a9a83608001516120d6565b67ffffffffffffffff168167ffffffffffffffff16145b8015610adc5750610ac583606001516120d6565b67ffffffffffffffff168167ffffffffffffffff16145b8015610b075750610af08360c001516120d6565b67ffffffffffffffff168167ffffffffffffffff16145b801561025d5750610b1b8360a001516120d6565b67ffffffffffffffff168167ffffffffffffffff16146102fa5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a4016102f1565b6000610c1360405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610c3760405180606001604052806000815260200160008152602001600081525090565b610c696040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b610ca96040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610cb48488886119e5565b6000610ccb61047786600001518760200151612147565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010060ff84160217905560408601516060870151919250610d12916121b1565b845284516060860151610d2591906121c6565b846020018181525050610d40856040015186602001516121dc565b60408501526000610d5085610215565b90508160ff168161ffff1614610da85760405162461bcd60e51b815260206004820152601760248201527f72656d546573743a2063617374203136206661696c656400000000000000000060448201526064016102f1565b610dba86608001518760a001516121f2565b8452855160a0870151610dcd9190612207565b846020018181525050610de88660800151876020015161221d565b846040018181525050610e0386604001518760a00151612233565b846060018181525050610e1e86608001518760600151612249565b60808501526000610e2e856118b8565b90508063ffffffff168360ff1614610e885760405162461bcd60e51b815260206004820152601760248201527f72656d546573743a2063617374203332206661696c656400000000000000000060448201526064016102f1565b610e9a8760c001518860e0015161225f565b8452865160e0880151610ead9190612274565b846020018181525050610ec88760c00151886020015161228a565b846040018181525050610ee387604001518860e001516122a0565b846060018181525050610efe8760c0015188606001516122b6565b846080018181525050610f1987608001518860e001516122cc565b8460a0018181525050610f348760c001518860a001516122e2565b60c08501526000610f4485610a26565b90508067ffffffffffffffff168460ff1614610fa25760405162461bcd60e51b815260206004820152601760248201527f72656d546573743a2063617374203634206661696c656400000000000000000060448201526064016102f1565b610fb36104778c8a602001516122f8565b60ff168460ff16148015610fdc5750610fd361047789600001518c61234a565b60ff168460ff16145b61104e5760405162461bcd60e51b815260206004820152602760248201527f72656d546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102f1565b6110626108288c60ff168a6060015161239d565b61ffff168460ff16148015611090575061108661082889604001518c60ff166123f1565b61ffff168460ff16145b6110ed5760405162461bcd60e51b815260206004820152602860248201527f72656d546573743a207465737420313620626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b6111016108ce8c60ff168a60a00151612444565b63ffffffff168460ff1614801561113357506111276108ce89608001518c60ff1661249a565b63ffffffff168460ff16145b6111905760405162461bcd60e51b815260206004820152602860248201527f72656d546573743a207465737420333220626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b6111a46109788c60ff168a60e001516124f0565b67ffffffffffffffff168460ff161480156111de57506111ce6109788960c001518c60ff1661254a565b67ffffffffffffffff168460ff16145b61123b5760405162461bcd60e51b815260206004820152602860248201527f72656d546573743a207465737420363420626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b50919998505050505050505050565b600061129460405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6112b860405180606001604052806000815260200160008152602001600081525090565b6112ea6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b61132a6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6113358488886119e5565b600061134c610477866000015187602001516125a4565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff83161790556040860151606087015191925061138f916125b9565b8452845160608601516113a291906125ce565b8460200181815250506113bd856040015186602001516125e4565b604085015260006113cd85610215565b90508160ff168161ffff16146114255760405162461bcd60e51b815260206004820152601760248201527f646976546573743a2063617374203136206661696c656400000000000000000060448201526064016102f1565b61143786608001518760a001516125fa565b8452855160a087015161144a919061260f565b84602001818152505061146586608001518760200151612625565b84604001818152505061148086604001518760a0015161263b565b84606001818152505061149b86608001518760600151612651565b608085015260006114ab856118b8565b90508063ffffffff168360ff16146115055760405162461bcd60e51b815260206004820152601760248201527f646976546573743a2063617374203332206661696c656400000000000000000060448201526064016102f1565b6115178760c001518860e00151612667565b8452865160e088015161152a919061267c565b8460200181815250506115458760c001518860200151612692565b84604001818152505061156087604001518860e001516126a8565b84606001818152505061157b8760c0015188606001516126be565b84608001818152505061159687608001518860e001516126d4565b8460a00181815250506115b18760c001518860a001516126ea565b60c085015260006115c185610a26565b90508067ffffffffffffffff168460ff161461161f5760405162461bcd60e51b815260206004820152601760248201527f646976546573743a2063617374203634206661696c656400000000000000000060448201526064016102f1565b6116306104778c8a60200151612700565b60ff168460ff16148015611659575061165061047789600001518c612715565b60ff168460ff16145b6116cb5760405162461bcd60e51b815260206004820152602760248201527f646976546573743a2074657374203820626974732077697468207363616c617260448201527f206661696c65640000000000000000000000000000000000000000000000000060648201526084016102f1565b6116df6108288c60ff168a6060015161272b565b61ffff168460ff1614801561170d575061170361082889604001518c60ff16612741565b61ffff168460ff16145b61176a5760405162461bcd60e51b815260206004820152602860248201527f646976546573743a207465737420313620626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b61177e6108ce8c60ff168a60a00151612756565b63ffffffff168460ff161480156117b057506117a46108ce89608001518c60ff1661276c565b63ffffffff168460ff16145b61180d5760405162461bcd60e51b815260206004820152602860248201527f646976546573743a207465737420333220626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b6118216109788c60ff168a60e00151612782565b67ffffffffffffffff168460ff1614801561185b575061184b6109788960c001518c60ff16612798565b67ffffffffffffffff168460ff16145b61123b5760405162461bcd60e51b815260206004820152602860248201527f646976546573743a207465737420363420626974732077697468207363616c616044820152671c8819985a5b195960c21b60648201526084016102f1565b6000806118c88360000151612008565b90506118d78360200151612008565b63ffffffff168163ffffffff1614801561190857506118f98360400151612008565b63ffffffff168163ffffffff16145b801561192b575061191c8360800151612008565b63ffffffff168163ffffffff16145b801561025d575061193f8360600151612008565b63ffffffff168163ffffffff16146102fa5760405162461bcd60e51b815260206004820152604660248201527f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960448201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260648201527f6573756c74730000000000000000000000000000000000000000000000000000608482015260a4016102f1565b6119ee826127ae565b83526119f9816127ae565b6020840152611a0a60ff8316612817565b6040840152611a1b60ff8216612817565b6060840152611a2c60ff8316612881565b6080840152611a3d60ff8216612881565b60a0840152611a4e60ff83166128ed565b60c0840152611a5f60ff82166128ed565b60e0909301929092525050565b60006064630cfed56160025b60f81b846040518363ffffffff1660e01b8152600401611ac69291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6020604051808303816000875af1158015611ae5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190612d50565b60008082611b18576000611b1b565b60015b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081526000600482015260ff9190911660248201819052915060649063d9b60b60906044015b6020604051808303816000875af1158015611b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba79190612d50565b9392505050565b60006064631d79e49a82611a78565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015611c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c459190612d50565b15159392505050565b600060646320cc408d611c636001808561295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810187905260448101869052606481018590526084015b6020604051808303816000875af1158015611cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce49190612d50565b949350505050565b60006064630cfed5616001611a78565b600060646320cc408d611c636002808561295d565b600060646320cc408d611c63600160028561295d565b600060646320cc408d611c63600260018561295d565b600060646320cc408d611c636003808561295d565b600060646320cc408d611c63600160038561295d565b600060646320cc408d611c63600360018561295d565b600060646320cc408d611c63600260038561295d565b600060646320cc408d611c63600360028561295d565b600060646320cc408d611c636004808561295d565b600060646320cc408d611c63600160048561295d565b600060646320cc408d611c63600460018561295d565b600060646320cc408d611c63600260048561295d565b600060646320cc408d611c63600460028561295d565b600060646320cc408d611c63600360048561295d565b600060646320cc408d611c63600460038561295d565b600060646320cc408d611e586001808061295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810187905260ff8616604482015260648101859052608401611ca1565b600060646320cc408d611eb2600180600261295d565b6040516001600160e01b031960e084901b1681526001600160e81b03199091166004820152602481018790526044810186905260ff85166064820152608401611ca1565b600060646320cc408d611f0c600280600161295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810187905261ffff8616604482015260648101859052608401611ca1565b600060646320cc408d611f666002808061295d565b6040516001600160e01b031960e084901b1681526001600160e81b03199091166004820152602481018790526044810186905261ffff85166064820152608401611ca1565b600060646320cc408d611fc1600380600161295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810187905263ffffffff8616604482015260648101859052608401611ca1565b60006064630cfed5616003611a78565b600060646320cc408d61202e600380600261295d565b6040516001600160e01b031960e084901b1681526001600160e81b03199091166004820152602481018790526044810186905263ffffffff85166064820152608401611ca1565b600060646320cc408d61208b600480600161295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810187905267ffffffffffffffff8616604482015260648101859052608401611ca1565b60006064630cfed5616004611a78565b600060646320cc408d6120fc600480600261295d565b6040516001600160e01b031960e084901b1681526001600160e81b03199091166004820152602481018790526044810186905267ffffffffffffffff85166064820152608401611ca1565b600060646386e3b7b961215c6001808561295d565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015260248101869052604481018590526064016020604051808303816000875af1158015611b83573d6000803e3d6000fd5b600060646386e3b7b961215c6002808561295d565b600060646386e3b7b961215c600160028561295d565b600060646386e3b7b961215c600260018561295d565b600060646386e3b7b961215c6003808561295d565b600060646386e3b7b961215c600160038561295d565b600060646386e3b7b961215c600360018561295d565b600060646386e3b7b961215c600260038561295d565b600060646386e3b7b961215c600360028561295d565b600060646386e3b7b961215c6004808561295d565b600060646386e3b7b961215c600160048561295d565b600060646386e3b7b961215c600460018561295d565b600060646386e3b7b961215c600260048561295d565b600060646386e3b7b961215c600460028561295d565b600060646386e3b7b961215c600360048561295d565b600060646386e3b7b961215c600460038561295d565b600060646386e3b7b961230d6001808061295d565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015260ff8616602482015260448101859052606401611b64565b600060646386e3b7b9612360600180600261295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905260ff85166044820152606401611b64565b600060646386e3b7b96123b3600280600161295d565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015261ffff8616602482015260448101859052606401611b64565b600060646386e3b7b96124066002808061295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905261ffff85166044820152606401611b64565b600060646386e3b7b961245a600380600161295d565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015263ffffffff8616602482015260448101859052606401611b64565b600060646386e3b7b96124b0600380600261295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905263ffffffff85166044820152606401611b64565b600060646386e3b7b9612506600480600161295d565b6040516001600160e01b031960e084901b1681526001600160e81b0319909116600482015267ffffffffffffffff8616602482015260448101859052606401611b64565b600060646386e3b7b9612560600480600261295d565b6040516001600160e01b031960e084901b1681526001600160e81b031990911660048201526024810186905267ffffffffffffffff85166044820152606401611b64565b60006064634e9ba4b561215c6001808561295d565b60006064634e9ba4b561215c6002808561295d565b60006064634e9ba4b561215c600160028561295d565b60006064634e9ba4b561215c600260018561295d565b60006064634e9ba4b561215c6003808561295d565b60006064634e9ba4b561215c600160038561295d565b60006064634e9ba4b561215c600360018561295d565b60006064634e9ba4b561215c600260038561295d565b60006064634e9ba4b561215c600360028561295d565b60006064634e9ba4b561215c6004808561295d565b60006064634e9ba4b561215c600160048561295d565b60006064634e9ba4b561215c600460018561295d565b60006064634e9ba4b561215c600260048561295d565b60006064634e9ba4b561215c600460028561295d565b60006064634e9ba4b561215c600360048561295d565b60006064634e9ba4b561215c600460038561295d565b60006064634e9ba4b561230d6001808061295d565b60006064634e9ba4b5612360600180600261295d565b60006064634e9ba4b56123b3600280600161295d565b60006064634e9ba4b56124066002808061295d565b60006064634e9ba4b561245a600380600161295d565b60006064634e9ba4b56124b0600380600261295d565b60006064634e9ba4b5612506600480600161295d565b60006064634e9ba4b5612560600480600261295d565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0100000000000000000000000000000000000000000000000000000000000000600482015260ff8216602482015260009060649063d9b60b6090604401611ac6565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0200000000000000000000000000000000000000000000000000000000000000600482015261ffff8216602482015260009060649063d9b60b6090604401611ac6565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0300000000000000000000000000000000000000000000000000000000000000600482015263ffffffff8216602482015260009060649063d9b60b6090604401611ac6565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b6090604401611ac6565b600081600281111561297157612971612d21565b60ff16600884600481111561298857612988612d21565b61ffff16901b61ffff1660108660048111156129a6576129a6612d21565b62ffffff16901b171760e81b949350505050565b604051610100810167ffffffffffffffff81118282101715612a05577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b600060608284031215612a1d57600080fd5b6040516060810181811067ffffffffffffffff82111715612a67577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b80604052508235815260208301356020820152604083013560408201528091505092915050565b80358015158114612a9e57600080fd5b919050565b600060208284031215612ab557600080fd5b611ba782612a8e565b803560ff81168114612a9e57600080fd5b600080600060608486031215612ae457600080fd5b612aed84612a8e565b9250612afb60208501612abe565b9150612b0960408501612abe565b90509250925092565b600060e08284031215612b2457600080fd5b60405160e0810181811067ffffffffffffffff82111715612b6e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201528091505092915050565b60008060408385031215612bd057600080fd5b612bd983612abe565b9150612be760208401612abe565b90509250929050565b600060a08284031215612c0257600080fd5b60405160a0810181811067ffffffffffffffff82111715612c4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b6000806000838503610140811215612c9e57600080fd5b61010080821215612cae57600080fd5b612cb66129ba565b9150853582526020860135602083015260408601356040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e0830152819450612d10818701612abe565b93505050612b096101208501612abe565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215612d6257600080fd5b505191905056fea26469706673582212206d7a7ee27a75db9dde18ff4345c537565581611f9e6e137401a93a42bbda5cd264736f6c63430008140033";

type MiscellaneousTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiscellaneousTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiscellaneousTestsContract__factory extends ContractFactory {
  constructor(...args: MiscellaneousTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MiscellaneousTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MiscellaneousTestsContract__factory {
    return super.connect(runner) as MiscellaneousTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiscellaneousTestsContractInterface {
    return new Interface(_abi) as MiscellaneousTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MiscellaneousTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MiscellaneousTestsContract;
  }
}
