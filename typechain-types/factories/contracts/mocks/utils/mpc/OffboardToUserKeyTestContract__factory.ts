/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  OffboardToUserKeyTestContract,
  OffboardToUserKeyTestContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/OffboardToUserKeyTestContract";

const _abi = [
  {
    inputs: [],
    name: "getCTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCt",
    outputs: [
      {
        internalType: "ctUint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOnboardOffboardResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserKeyShares",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signedEK",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getUserKeyTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a8",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "a16",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "a32",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "a64",
        type: "uint32",
      },
    ],
    name: "offboardOnboardTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "offboardToUserTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signedEK",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "userKeyTest",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612645806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80634e7b55c3116100665780634e7b55c3146101265780635197c7aa14610145578063b30fc30d14610163578063fbe5fe1c14610193578063fbffef77146101c357610093565b80630844066e1461009857806320ee9bfb146100b65780633d36856a146100e75780633e99ee8c14610105575b600080fd5b6100a06101f6565b6040516100ad91906119b2565b60405180910390f35b6100d060048036038101906100cb9190611a46565b610200565b6040516100de929190611b57565b60405180910390f35b6100ef610363565b6040516100fc9190611baa565b60405180910390f35b61010d61037a565b60405161011d9493929190611bd4565b60405180910390f35b61012e61039a565b60405161013c929190611b57565b60405180910390f35b61014d6104c1565b60405161015a9190611baa565b60405180910390f35b61017d60048036038101906101789190611cbb565b6104d8565b60405161018a9190611baa565b60405180910390f35b6101ad60048036038101906101a89190611d80565b610642565b6040516101ba9190611baa565b60405180910390f35b6101dd60048036038101906101d89190611e15565b610703565b6040516101ed9493929190611bd4565b60405180910390f35b6000600354905090565b60608061020f868686866107bf565b600080600160008491905090816102269190612064565b508391905090816102379190612064565b5050506000600181805461024a90611eb3565b80601f016020809104026020016040519081016040528092919081815260200182805461027690611eb3565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505091508080546102d690611eb3565b80601f016020809104026020016040519081016040528092919081815260200182805461030290611eb3565b801561034f5780601f106103245761010080835404028352916020019161034f565b820191906000526020600020905b81548152906001019060200180831161033257829003601f168201915b505050505090509150915094509492505050565b6000600860009054906101000a900460ff16905090565b600080600080600454600554600654600754935093509350935090919293565b606080600060018180546103ad90611eb3565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611eb3565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050915080805461043990611eb3565b80601f016020809104026020016040519081016040528092919081815260200182805461046590611eb3565b80156104b25780601f10610487576101008083540402835291602001916104b2565b820191906000526020600020905b81548152906001019060200180831161049557829003601f168201915b50505050509050915091509091565b6000600260009054906101000a900460ff16905090565b6000806104e486610b80565b905060006104f186610c21565b905060006104fe86610cc3565b905060006105118663ffffffff16610d67565b9050600061051e85610e0e565b9050600061053361052e83610eac565b610f4a565b905080600860006101000a81548160ff021916908360ff160217905550600061055b86610fe8565b9050600061057061056b83611086565b611124565b9050600061057d876111c2565b9050600061059261058d83611260565b6112fe565b9050600061059f8861139c565b905060006105b46105af83611439565b6114d6565b90508461ffff168760ff161480156105d457508263ffffffff168760ff16145b80156105ec57508067ffffffffffffffff168760ff16145b61062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906121b9565b60405180910390fd5b869c50505050505050505050505050949350505050565b60008061064f6005610b80565b9050600061065e826005611573565b905061066c888888886107bf565b600080600160008491905090816106839190612064565b508391905090816106949190612064565b5050506106a1818561160d565b60038190555060006106b282610e0e565b905060006106bf82610eac565b90506106ca81610f4a565b600260006101000a81548160ff021916908360ff160217905550600260009054906101000a900460ff1694505050505095945050505050565b600080600080600061071487610b80565b905060006107248860ff16610c21565b905060006107348960ff16610cc3565b905060006107448a60ff16610d67565b90506000610752858b61160d565b90506000610760858c6116cd565b9050600061076e858d61178d565b9050600061077c858e61184d565b9050836004819055508260058190555081600681905550806007819055506004546005546006546007549b509b509b509b50505050505050505092959194509250565b606080600086869050858590506107d69190612208565b67ffffffffffffffff8111156107ef576107ee611e55565b5b6040519080825280601f01601f1916602001820160405280156108215781602001600182028036833780820191505090505b50905060005b858590508110156108a4578585828181106108455761084461223c565b5b9050013560f81c60f81b8282815181106108625761086161223c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061089c9061226b565b915050610827565b5060005b87879050811015610933578787828181106108c6576108c561223c565b5b9050013560f81c60f81b8282888890506108e09190612208565b815181106108f1576108f061223c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061092b9061226b565b9150506108a8565b506000606473ffffffffffffffffffffffffffffffffffffffff1663a85f0ca2836040518263ffffffff1660e01b815260040161097091906122b3565b6000604051808303816000875af115801561098f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109b891906123c7565b9050600061010067ffffffffffffffff8111156109d8576109d7611e55565b5b6040519080825280601f01601f191660200182016040528015610a0a5781602001600182028036833780820191505090505b509050600061010067ffffffffffffffff811115610a2b57610a2a611e55565b5b6040519080825280601f01601f191660200182016040528015610a5d5781602001600182028036833780820191505090505b50905060005b8251811015610adf57838181518110610a7f57610a7e61223c565b5b602001015160f81c60f81b838281518110610a9d57610a9c61223c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610ad79061226b565b915050610a63565b5060005b8151811015610b6c578361010082610afb9190612208565b81518110610b0c57610b0b61223c565b5b602001015160f81c60f81b828281518110610b2a57610b2961223c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610b649061226b565b915050610ae3565b508181955095505050505094509492505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060016004811115610bb357610bb2612410565b5b60f81b8460ff166040518363ffffffff1660e01b8152600401610bd792919061247a565b6020604051808303816000875af1158015610bf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1a91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060026004811115610c5457610c53612410565b5b60f81b8461ffff166040518363ffffffff1660e01b8152600401610c7992919061247a565b6020604051808303816000875af1158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060036004811115610cf657610cf5612410565b5b60f81b8463ffffffff166040518363ffffffff1660e01b8152600401610d1d92919061247a565b6020604051808303816000875af1158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6091906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b60600480811115610d9957610d98612410565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b8152600401610dc492919061247a565b6020604051808303816000875af1158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0791906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c0260016004811115610e4157610e40612410565b5b60f81b846040518363ffffffff1660e01b8152600401610e6292919061247a565b6020604051808303816000875af1158015610e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea591906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e560016004811115610edf57610ede612410565b5b60f81b846040518363ffffffff1660e01b8152600401610f0092919061247a565b6020604051808303816000875af1158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4391906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160016004811115610f7d57610f7c612410565b5b60f81b846040518363ffffffff1660e01b8152600401610f9e92919061247a565b6020604051808303816000875af1158015610fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe191906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c026002600481111561101b5761101a612410565b5b60f81b846040518363ffffffff1660e01b815260040161103c92919061247a565b6020604051808303816000875af115801561105b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107f91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e5600260048111156110b9576110b8612410565b5b60f81b846040518363ffffffff1660e01b81526004016110da92919061247a565b6020604051808303816000875af11580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed5616002600481111561115757611156612410565b5b60f81b846040518363ffffffff1660e01b815260040161117892919061247a565b6020604051808303816000875af1158015611197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bb91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c02600360048111156111f5576111f4612410565b5b60f81b846040518363ffffffff1660e01b815260040161121692919061247a565b6020604051808303816000875af1158015611235573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125991906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e56003600481111561129357611292612410565b5b60f81b846040518363ffffffff1660e01b81526004016112b492919061247a565b6020604051808303816000875af11580156112d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f791906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed5616003600481111561133157611330612410565b5b60f81b846040518363ffffffff1660e01b815260040161135292919061247a565b6020604051808303816000875af1158015611371573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139591906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c026004808111156113ce576113cd612410565b5b60f81b846040518363ffffffff1660e01b81526004016113ef92919061247a565b6020604051808303816000875af115801561140e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143291906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e560048081111561146b5761146a612410565b5b60f81b846040518363ffffffff1660e01b815260040161148c92919061247a565b6020604051808303816000875af11580156114ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cf91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160048081111561150857611507612410565b5b60f81b846040518363ffffffff1660e01b815260040161152992919061247a565b6020604051808303816000875af1158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156c91906124cf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d015061159f600180600261190c565b858560ff166040518463ffffffff1660e01b81526004016115c293929190612537565b6020604051808303816000875af11580156115e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160591906124cf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e68600160048111156116405761163f612410565b5b60f81b858560405160200161165591906125b6565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611682939291906125d1565b6020604051808303816000875af11580156116a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c591906124cf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860026004811115611700576116ff612410565b5b60f81b858560405160200161171591906125b6565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611742939291906125d1565b6020604051808303816000875af1158015611761573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178591906124cf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e68600360048111156117c0576117bf612410565b5b60f81b85856040516020016117d591906125b6565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611802939291906125d1565b6020604051808303816000875af1158015611821573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184591906124cf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860048081111561187f5761187e612410565b5b60f81b858560405160200161189491906125b6565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016118c1939291906125d1565b6020604051808303816000875af11580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190491906124cf565b905092915050565b600081600281111561192157611920612410565b5b60ff16600884600481111561193957611938612410565b5b61ffff16901b61ffff16601086600481111561195857611957612410565b5b62ffffff16901b171760e81b90509392505050565b6000819050919050565b6000819050919050565b600061199c6119976119928461196d565b611977565b61196d565b9050919050565b6119ac81611981565b82525050565b60006020820190506119c760008301846119a3565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112611a0657611a056119e1565b5b8235905067ffffffffffffffff811115611a2357611a226119e6565b5b602083019150836001820283011115611a3f57611a3e6119eb565b5b9250929050565b60008060008060408587031215611a6057611a5f6119d7565b5b600085013567ffffffffffffffff811115611a7e57611a7d6119dc565b5b611a8a878288016119f0565b9450945050602085013567ffffffffffffffff811115611aad57611aac6119dc565b5b611ab9878288016119f0565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b01578082015181840152602081019050611ae6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b2982611ac7565b611b338185611ad2565b9350611b43818560208601611ae3565b611b4c81611b0d565b840191505092915050565b60006040820190508181036000830152611b718185611b1e565b90508181036020830152611b858184611b1e565b90509392505050565b600060ff82169050919050565b611ba481611b8e565b82525050565b6000602082019050611bbf6000830184611b9b565b92915050565b611bce8161196d565b82525050565b6000608082019050611be96000830187611bc5565b611bf66020830186611bc5565b611c036040830185611bc5565b611c106060830184611bc5565b95945050505050565b611c2281611b8e565b8114611c2d57600080fd5b50565b600081359050611c3f81611c19565b92915050565b600061ffff82169050919050565b611c5c81611c45565b8114611c6757600080fd5b50565b600081359050611c7981611c53565b92915050565b600063ffffffff82169050919050565b611c9881611c7f565b8114611ca357600080fd5b50565b600081359050611cb581611c8f565b92915050565b60008060008060808587031215611cd557611cd46119d7565b5b6000611ce387828801611c30565b9450506020611cf487828801611c6a565b9350506040611d0587828801611ca6565b9250506060611d1687828801611ca6565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4d82611d22565b9050919050565b611d5d81611d42565b8114611d6857600080fd5b50565b600081359050611d7a81611d54565b92915050565b600080600080600060608688031215611d9c57611d9b6119d7565b5b600086013567ffffffffffffffff811115611dba57611db96119dc565b5b611dc6888289016119f0565b9550955050602086013567ffffffffffffffff811115611de957611de86119dc565b5b611df5888289016119f0565b93509350506040611e0888828901611d6b565b9150509295509295909350565b60008060408385031215611e2c57611e2b6119d7565b5b6000611e3a85828601611c30565b9250506020611e4b85828601611d6b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ecb57607f821691505b602082108103611ede57611edd611e84565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611f467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f09565b611f508683611f09565b95508019841693508086168417925050509392505050565b6000819050919050565b611f7b83611981565b611f8f611f8782611f68565b848454611f16565b825550505050565b600090565b611fa4611f97565b611faf818484611f72565b505050565b5b81811015611fd357611fc8600082611f9c565b600181019050611fb5565b5050565b601f82111561201857611fe981611ee4565b611ff284611ef9565b81016020851015612001578190505b61201561200d85611ef9565b830182611fb4565b50505b505050565b600082821c905092915050565b600061203b6000198460080261201d565b1980831691505092915050565b6000612054838361202a565b9150826002028217905092915050565b61206d82611ac7565b67ffffffffffffffff81111561208657612085611e55565b5b6120908254611eb3565b61209b828285611fd7565b600060209050601f8311600181146120ce57600084156120bc578287015190505b6120c68582612048565b86555061212e565b601f1984166120dc86611ee4565b60005b82811015612104578489015182556001820191506020850194506020810190506120df565b86831015612121578489015161211d601f89168261202a565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f4661696c656420746f206f6666626f61726420616e64206f6e626f617264206160008201527f6c6c2076616c7565730000000000000000000000000000000000000000000000602082015250565b60006121a3602983612136565b91506121ae82612147565b604082019050919050565b600060208201905081810360008301526121d281612196565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122138261196d565b915061221e8361196d565b9250828201905080821115612236576122356121d9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006122768261196d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122a8576122a76121d9565b5b600182019050919050565b600060208201905081810360008301526122cd8184611b1e565b905092915050565b600080fd5b6122e382611b0d565b810181811067ffffffffffffffff8211171561230257612301611e55565b5b80604052505050565b60006123156119cd565b905061232182826122da565b919050565b600067ffffffffffffffff82111561234157612340611e55565b5b61234a82611b0d565b9050602081019050919050565b600061236a61236584612326565b61230b565b905082815260208101848484011115612386576123856122d5565b5b612391848285611ae3565b509392505050565b600082601f8301126123ae576123ad6119e1565b5b81516123be848260208601612357565b91505092915050565b6000602082840312156123dd576123dc6119d7565b5b600082015167ffffffffffffffff8111156123fb576123fa6119dc565b5b61240784828501612399565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6124748161243f565b82525050565b600060408201905061248f600083018561246b565b61249c6020830184611bc5565b9392505050565b6124ac8161196d565b81146124b757600080fd5b50565b6000815190506124c9816124a3565b92915050565b6000602082840312156124e5576124e46119d7565b5b60006124f3848285016124ba565b91505092915050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b612531816124fc565b82525050565b600060608201905061254c6000830186612528565b6125596020830185611bc5565b6125666040830184611bc5565b949350505050565b60008160601b9050919050565b60006125868261256e565b9050919050565b60006125988261257b565b9050919050565b6125b06125ab82611d42565b61258d565b82525050565b60006125c2828461259f565b60148201915081905092915050565b60006060820190506125e6600083018661246b565b6125f36020830185611bc5565b81810360408301526126058184611b1e565b905094935050505056fea26469706673582212207eac21db8f7f39db4468900352255c65ad37bff86ae85f3093cf0f6c9573829264736f6c63430008140033";

type OffboardToUserKeyTestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffboardToUserKeyTestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffboardToUserKeyTestContract__factory extends ContractFactory {
  constructor(...args: OffboardToUserKeyTestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OffboardToUserKeyTestContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OffboardToUserKeyTestContract__factory {
    return super.connect(runner) as OffboardToUserKeyTestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffboardToUserKeyTestContractInterface {
    return new Interface(_abi) as OffboardToUserKeyTestContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OffboardToUserKeyTestContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OffboardToUserKeyTestContract;
  }
}
