/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ShiftTestsContract,
  ShiftTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/ShiftTestsContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint16",
            name: "res16_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res8_16",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "res16_8",
            type: "uint256",
          },
        ],
        internalType: "struct ShiftTestsContract.Check16",
        name: "check16",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint32",
            name: "res32_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res8_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_8",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res16_32",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "res32_16",
            type: "uint256",
          },
        ],
        internalType: "struct ShiftTestsContract.Check32",
        name: "check32",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint64",
            name: "res64_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res8_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_8",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res16_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_16",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res32_64",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "res64_32",
            type: "uint256",
          },
        ],
        internalType: "struct ShiftTestsContract.Check64",
        name: "check64",
        type: "tuple",
      },
    ],
    name: "decryptAndCompareResults64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllShiftResults",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResult",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct ShiftTestsContract.AllGTCastingValues",
        name: "castingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "setPublicValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "shlTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
    ],
    name: "shrTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d2becd381161005b578063d2becd3814610150578063de29278914610171578063ebb571fd1461018f578063ee49a6ea146101ab57610088565b806308e9d12a1461008d5780632e544aa0146100c057806380f937bc146100f0578063acb3816914610120575b600080fd5b6100a760048036038101906100a29190611320565b6101db565b6040516100b794939291906113ce565b60405180910390f35b6100da60048036038101906100d5919061153e565b61032d565b6040516100e7919061156b565b60405180910390f35b61010a60048036038101906101059190611666565b6103bd565b6040516101179190611693565b60405180910390f35b61013a60048036038101906101359190611766565b610511565b6040516101479190611793565b60405180910390f35b6101586105ef565b60405161016894939291906113ce565b60405180910390f35b61017961064e565b60405161018691906117ae565b60405180910390f35b6101a960048036038101906101a491906118bf565b610664565b005b6101c560048036038101906101c09190611320565b61070b565b6040516101d291906117ae565b60405180910390f35b6000806000806101e9611293565b6101f4818888610664565b61020a610205826000015188610847565b6108e1565b600060016101000a81548160ff021916908360ff16021790555061023a61023582604001518861097f565b610a1a565b600060026101000a81548161ffff021916908361ffff16021790555061026f61026a82608001518860ff16610ab8565b610b55565b600060046101000a81548163ffffffff021916908363ffffffff1602179055506102a86102a38260c001518860ff16610bf3565b610c94565b600060086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600060019054906101000a900460ff16600060029054906101000a900461ffff16600060049054906101000a900463ffffffff16600060089054906101000a900467ffffffffffffffff1694509450945094505092959194509250565b60008061033d8360000151610a1a565b905061034c8360200151610a1a565b61ffff168161ffff16148015610375575061036a8360400151610a1a565b61ffff168161ffff16145b6103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906119be565b60405180910390fd5b80915050919050565b6000806103cd8360000151610c94565b90506103dc8360200151610c94565b67ffffffffffffffff168167ffffffffffffffff1614801561041d57506104068360400151610c94565b67ffffffffffffffff168167ffffffffffffffff16145b801561044857506104318360800151610c94565b67ffffffffffffffff168167ffffffffffffffff16145b8015610473575061045c8360600151610c94565b67ffffffffffffffff168167ffffffffffffffff16145b801561049e57506104878360c00151610c94565b67ffffffffffffffff168167ffffffffffffffff16145b80156104c957506104b28360a00151610c94565b67ffffffffffffffff168167ffffffffffffffff16145b610508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ff906119be565b60405180910390fd5b80915050919050565b6000806105218360000151610b55565b90506105308360200151610b55565b63ffffffff168163ffffffff1614801561056157506105528360400151610b55565b63ffffffff168163ffffffff16145b801561058457506105758360800151610b55565b63ffffffff168163ffffffff16145b80156105a757506105988360600151610b55565b63ffffffff168163ffffffff16145b6105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd906119be565b60405180910390fd5b80915050919050565b600080600080600060019054906101000a900460ff16600060029054906101000a900461ffff16600060049054906101000a900463ffffffff16600060089054906101000a900467ffffffffffffffff16935093509350935090919293565b60008060009054906101000a900460ff16905090565b61066d82610d31565b83600001818152505061067f81610d31565b8360200181815250506106948260ff16610dd2565b8360400181815250506106a98160ff16610dd2565b8360600181815250506106be8260ff16610e74565b8360800181815250506106d38160ff16610e74565b8360a00181815250506106e88260ff16610f18565b8360c00181815250506106fd8160ff16610f18565b8360e0018181525050505050565b6000610715611293565b610720818585610664565b610736610731826000015185610fbf565b6108e1565b6000806101000a81548160ff021916908360ff160217905550610765610760826040015185611059565b610a1a565b61ffff1660008054906101000a900460ff1660ff161480156107b4575061079b61079682608001518560ff166110f4565b610b55565b63ffffffff1660008054906101000a900460ff1660ff16145b80156107f157506107d46107cf8260c001518560ff16611191565b610c94565b67ffffffffffffffff1660008054906101000a900460ff1660ff16145b610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790611a2a565b60405180910390fd5b60008054906101000a900460ff1691505092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16631135f71a6108736001806002611232565b858560ff166040518463ffffffff1660e01b815260040161089693929190611a94565b6020604051808303816000875af11580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed5616001600481111561091457610913611b24565b5b60f81b846040518363ffffffff1660e01b8152600401610935929190611b8e565b6020604051808303816000875af1158015610954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109789190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16631135f71a6109ac600260016002611232565b858560ff166040518463ffffffff1660e01b81526004016109cf93929190611a94565b6020604051808303816000875af11580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160026004811115610a4d57610a4c611b24565b5b60f81b846040518363ffffffff1660e01b8152600401610a6e929190611b8e565b6020604051808303816000875af1158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16631135f71a610ae46003806002611232565b858563ffffffff166040518463ffffffff1660e01b8152600401610b0a93929190611a94565b6020604051808303816000875af1158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160036004811115610b8857610b87611b24565b5b60f81b846040518363ffffffff1660e01b8152600401610ba9929190611b8e565b6020604051808303816000875af1158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16631135f71a610c1f6004806002611232565b858567ffffffffffffffff166040518463ffffffff1660e01b8152600401610c4993929190611a94565b6020604051808303816000875af1158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c9190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed561600480811115610cc657610cc5611b24565b5b60f81b846040518363ffffffff1660e01b8152600401610ce7929190611b8e565b6020604051808303816000875af1158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060016004811115610d6457610d63611b24565b5b60f81b8460ff166040518363ffffffff1660e01b8152600401610d88929190611b8e565b6020604051808303816000875af1158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb9190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060026004811115610e0557610e04611b24565b5b60f81b8461ffff166040518363ffffffff1660e01b8152600401610e2a929190611b8e565b6020604051808303816000875af1158015610e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6d9190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060036004811115610ea757610ea6611b24565b5b60f81b8463ffffffff166040518363ffffffff1660e01b8152600401610ece929190611b8e565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b60600480811115610f4a57610f49611b24565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b8152600401610f75929190611b8e565b6020604051808303816000875af1158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb89190611af7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff166339bd1d8d610feb6001806002611232565b858560ff166040518463ffffffff1660e01b815260040161100e93929190611a94565b6020604051808303816000875af115801561102d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110519190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff166339bd1d8d611086600260016002611232565b858560ff166040518463ffffffff1660e01b81526004016110a993929190611a94565b6020604051808303816000875af11580156110c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ec9190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff166339bd1d8d6111206003806002611232565b858563ffffffff166040518463ffffffff1660e01b815260040161114693929190611a94565b6020604051808303816000875af1158015611165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111899190611af7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff166339bd1d8d6111bd6004806002611232565b858567ffffffffffffffff166040518463ffffffff1660e01b81526004016111e793929190611a94565b6020604051808303816000875af1158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a9190611af7565b905092915050565b600081600281111561124757611246611b24565b5b60ff16600884600481111561125f5761125e611b24565b5b61ffff16901b61ffff16601086600481111561127e5761127d611b24565b5b62ffffff16901b171760e81b90509392505050565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600060ff82169050919050565b6112fd816112e7565b811461130857600080fd5b50565b60008135905061131a816112f4565b92915050565b60008060408385031215611337576113366112e2565b5b60006113458582860161130b565b92505060206113568582860161130b565b9150509250929050565b611369816112e7565b82525050565b600061ffff82169050919050565b6113868161136f565b82525050565b600063ffffffff82169050919050565b6113a58161138c565b82525050565b600067ffffffffffffffff82169050919050565b6113c8816113ab565b82525050565b60006080820190506113e36000830187611360565b6113f0602083018661137d565b6113fd604083018561139c565b61140a60608301846113bf565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61146182611418565b810181811067ffffffffffffffff821117156114805761147f611429565b5b80604052505050565b60006114936112d8565b905061149f8282611458565b919050565b6000819050919050565b6114b7816114a4565b81146114c257600080fd5b50565b6000813590506114d4816114ae565b92915050565b6000606082840312156114f0576114ef611413565b5b6114fa6060611489565b9050600061150a848285016114c5565b600083015250602061151e848285016114c5565b6020830152506040611532848285016114c5565b60408301525092915050565b600060608284031215611554576115536112e2565b5b6000611562848285016114da565b91505092915050565b6000602082019050611580600083018461137d565b92915050565b61158f816114a4565b811461159a57600080fd5b50565b6000813590506115ac81611586565b92915050565b600060e082840312156115c8576115c7611413565b5b6115d260e0611489565b905060006115e28482850161159d565b60008301525060206115f68482850161159d565b602083015250604061160a8482850161159d565b604083015250606061161e8482850161159d565b60608301525060806116328482850161159d565b60808301525060a06116468482850161159d565b60a08301525060c061165a8482850161159d565b60c08301525092915050565b600060e0828403121561167c5761167b6112e2565b5b600061168a848285016115b2565b91505092915050565b60006020820190506116a860008301846113bf565b92915050565b6116b7816114a4565b81146116c257600080fd5b50565b6000813590506116d4816116ae565b92915050565b600060a082840312156116f0576116ef611413565b5b6116fa60a0611489565b9050600061170a848285016116c5565b600083015250602061171e848285016116c5565b6020830152506040611732848285016116c5565b6040830152506060611746848285016116c5565b606083015250608061175a848285016116c5565b60808301525092915050565b600060a0828403121561177c5761177b6112e2565b5b600061178a848285016116da565b91505092915050565b60006020820190506117a8600083018461139c565b92915050565b60006020820190506117c36000830184611360565b92915050565b6117d2816114a4565b81146117dd57600080fd5b50565b6000813590506117ef816117c9565b92915050565b6000610100828403121561180c5761180b611413565b5b611817610100611489565b90506000611827848285016117e0565b600083015250602061183b848285016117e0565b602083015250604061184f848285016114c5565b6040830152506060611863848285016114c5565b6060830152506080611877848285016116c5565b60808301525060a061188b848285016116c5565b60a08301525060c061189f8482850161159d565b60c08301525060e06118b38482850161159d565b60e08301525092915050565b600080600061014084860312156118d9576118d86112e2565b5b60006118e7868287016117f5565b9350506101006118f98682870161130b565b92505061012061190b8682870161130b565b9150509250925092565b600082825260208201905092915050565b7f64656372797074416e64436f6d70617265416c6c526573756c74733a2046616960008201527f6c656420746f206465637279707420616e6420636f6d7061726520616c6c207260208201527f6573756c74730000000000000000000000000000000000000000000000000000604082015250565b60006119a8604683611915565b91506119b382611926565b606082019050919050565b600060208201905081810360008301526119d78161199b565b9050919050565b7f73687254657374206661696c6564000000000000000000000000000000000000600082015250565b6000611a14600e83611915565b9150611a1f826119de565b602082019050919050565b60006020820190508181036000830152611a4381611a07565b9050919050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b611a7f81611a4a565b82525050565b611a8e816114a4565b82525050565b6000606082019050611aa96000830186611a76565b611ab66020830185611a85565b611ac36040830184611a85565b949350505050565b611ad4816114a4565b8114611adf57600080fd5b50565b600081519050611af181611acb565b92915050565b600060208284031215611b0d57611b0c6112e2565b5b6000611b1b84828501611ae2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b8881611b53565b82525050565b6000604082019050611ba36000830185611b7f565b611bb06020830184611a85565b939250505056fea264697066735822122027ca7562dcc8d324ee7815187867cdd8cd05499eb10752fd419879d853c7516664736f6c63430008140033";

type ShiftTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShiftTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShiftTestsContract__factory extends ContractFactory {
  constructor(...args: ShiftTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShiftTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShiftTestsContract__factory {
    return super.connect(runner) as ShiftTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShiftTestsContractInterface {
    return new Interface(_abi) as ShiftTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ShiftTestsContract {
    return new Contract(address, _abi, runner) as unknown as ShiftTestsContract;
  }
}
