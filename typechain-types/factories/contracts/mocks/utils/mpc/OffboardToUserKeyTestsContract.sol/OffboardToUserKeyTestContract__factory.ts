/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  OffboardToUserKeyTestContract,
  OffboardToUserKeyTestContractInterface,
} from "../../../../../../contracts/mocks/utils/mpc/OffboardToUserKeyTestsContract.sol/OffboardToUserKeyTestContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userKey",
        type: "bytes",
      },
    ],
    name: "AccountOnboarded",
    type: "event",
  },
  {
    inputs: [],
    name: "getCTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCt",
    outputs: [
      {
        internalType: "ctUint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserKeyShares",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signedEK",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getUserKeyTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "offboardToUserTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signedEK",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "userKeyTest",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d55806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634e7b55c31161005b5780634e7b55c3146100f25780635197c7aa14610111578063fbe5fe1c1461012f578063fbffef771461015f5761007d565b80630844066e1461008257806320ee9bfb146100a05780633e99ee8c146100d1575b600080fd5b61008a610192565b6040516100979190611242565b60405180910390f35b6100ba60048036038101906100b591906112d6565b61019c565b6040516100c89291906113e7565b60405180910390f35b6100d96102ff565b6040516100e9949392919061142d565b60405180910390f35b6100fa61031f565b6040516101089291906113e7565b60405180910390f35b610119610446565b604051610126919061148e565b60405180910390f35b61014960048036038101906101449190611507565b61045d565b604051610156919061148e565b60405180910390f35b610179600480360381019061017491906115c8565b61051e565b604051610189949392919061142d565b60405180910390f35b6000600354905090565b6060806101ab868686866105da565b600080600160008491905090816101c29190611817565b508391905090816101d39190611817565b505050600060018180546101e690611666565b80601f016020809104026020016040519081016040528092919081815260200182805461021290611666565b801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b5050505050915080805461027290611666565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90611666565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b505050505090509150915094509492505050565b600080600080600454600554600654600754935093509350935090919293565b6060806000600181805461033290611666565b80601f016020809104026020016040519081016040528092919081815260200182805461035e90611666565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b505050505091508080546103be90611666565b80601f01602080910402602001604051908101604052809291908181526020018280546103ea90611666565b80156104375780601f1061040c57610100808354040283529160200191610437565b820191906000526020600020905b81548152906001019060200180831161041a57829003601f168201915b50505050509050915091509091565b6000600260009054906101000a900460ff16905090565b60008061046a600561099b565b90506000610479826005610a3c565b9050610487888888886105da565b6000806001600084919050908161049e9190611817565b508391905090816104af9190611817565b5050506104bc8185610ad6565b60038190555060006104cd82610b96565b905060006104da82610c34565b90506104e581610cd2565b600260006101000a81548160ff021916908360ff160217905550600260009054906101000a900460ff1694505050505095945050505050565b600080600080600061052f8761099b565b9050600061053f8860ff16610d70565b9050600061054f8960ff16610e12565b9050600061055f8a60ff16610eb6565b9050600061056d858b610ad6565b9050600061057b858c610f5d565b90506000610589858d61101d565b90506000610597858e6110dd565b9050836004819055508260058190555081600681905550806007819055506004546005546006546007549b509b509b509b50505050505050505092959194509250565b606080600086869050858590506105f19190611918565b67ffffffffffffffff81111561060a57610609611608565b5b6040519080825280601f01601f19166020018201604052801561063c5781602001600182028036833780820191505090505b50905060005b858590508110156106bf578585828181106106605761065f61194c565b5b9050013560f81c60f81b82828151811061067d5761067c61194c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806106b79061197b565b915050610642565b5060005b8787905081101561074e578787828181106106e1576106e061194c565b5b9050013560f81c60f81b8282888890506106fb9190611918565b8151811061070c5761070b61194c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806107469061197b565b9150506106c3565b506000606473ffffffffffffffffffffffffffffffffffffffff1663a85f0ca2836040518263ffffffff1660e01b815260040161078b91906119c3565b6000604051808303816000875af11580156107aa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107d39190611ad7565b9050600061010067ffffffffffffffff8111156107f3576107f2611608565b5b6040519080825280601f01601f1916602001820160405280156108255781602001600182028036833780820191505090505b509050600061010067ffffffffffffffff81111561084657610845611608565b5b6040519080825280601f01601f1916602001820160405280156108785781602001600182028036833780820191505090505b50905060005b82518110156108fa5783818151811061089a5761089961194c565b5b602001015160f81c60f81b8382815181106108b8576108b761194c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806108f29061197b565b91505061087e565b5060005b81518110156109875783610100826109169190611918565b815181106109275761092661194c565b5b602001015160f81c60f81b8282815181106109455761094461194c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061097f9061197b565b9150506108fe565b508181955095505050505094509492505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b60600160048111156109ce576109cd611b20565b5b60f81b8460ff166040518363ffffffff1660e01b81526004016109f2929190611b8a565b6020604051808303816000875af1158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d0150610a68600180600261119c565b858560ff166040518463ffffffff1660e01b8152600401610a8b93929190611c47565b6020604051808303816000875af1158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190611bdf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860016004811115610b0957610b08611b20565b5b60f81b8585604051602001610b1e9190611cc6565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610b4b93929190611ce1565b6020604051808303816000875af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611bdf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c0260016004811115610bc957610bc8611b20565b5b60f81b846040518363ffffffff1660e01b8152600401610bea929190611b8a565b6020604051808303816000875af1158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d9190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e560016004811115610c6757610c66611b20565b5b60f81b846040518363ffffffff1660e01b8152600401610c88929190611b8a565b6020604051808303816000875af1158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb9190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160016004811115610d0557610d04611b20565b5b60f81b846040518363ffffffff1660e01b8152600401610d26929190611b8a565b6020604051808303816000875af1158015610d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d699190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060026004811115610da357610da2611b20565b5b60f81b8461ffff166040518363ffffffff1660e01b8152600401610dc8929190611b8a565b6020604051808303816000875af1158015610de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0b9190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060036004811115610e4557610e44611b20565b5b60f81b8463ffffffff166040518363ffffffff1660e01b8152600401610e6c929190611b8a565b6020604051808303816000875af1158015610e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaf9190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b60600480811115610ee857610ee7611b20565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b8152600401610f13929190611b8a565b6020604051808303816000875af1158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f569190611bdf565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860026004811115610f9057610f8f611b20565b5b60f81b8585604051602001610fa59190611cc6565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610fd293929190611ce1565b6020604051808303816000875af1158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110159190611bdf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e68600360048111156110505761104f611b20565b5b60f81b85856040516020016110659190611cc6565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161109293929190611ce1565b6020604051808303816000875af11580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d59190611bdf565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860048081111561110f5761110e611b20565b5b60f81b85856040516020016111249190611cc6565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161115193929190611ce1565b6020604051808303816000875af1158015611170573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111949190611bdf565b905092915050565b60008160028111156111b1576111b0611b20565b5b60ff1660088460048111156111c9576111c8611b20565b5b61ffff16901b61ffff1660108660048111156111e8576111e7611b20565b5b62ffffff16901b171760e81b90509392505050565b6000819050919050565b6000819050919050565b600061122c611227611222846111fd565b611207565b6111fd565b9050919050565b61123c81611211565b82525050565b60006020820190506112576000830184611233565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261129657611295611271565b5b8235905067ffffffffffffffff8111156112b3576112b2611276565b5b6020830191508360018202830111156112cf576112ce61127b565b5b9250929050565b600080600080604085870312156112f0576112ef611267565b5b600085013567ffffffffffffffff81111561130e5761130d61126c565b5b61131a87828801611280565b9450945050602085013567ffffffffffffffff81111561133d5761133c61126c565b5b61134987828801611280565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015611391578082015181840152602081019050611376565b60008484015250505050565b6000601f19601f8301169050919050565b60006113b982611357565b6113c38185611362565b93506113d3818560208601611373565b6113dc8161139d565b840191505092915050565b6000604082019050818103600083015261140181856113ae565b9050818103602083015261141581846113ae565b90509392505050565b611427816111fd565b82525050565b6000608082019050611442600083018761141e565b61144f602083018661141e565b61145c604083018561141e565b611469606083018461141e565b95945050505050565b600060ff82169050919050565b61148881611472565b82525050565b60006020820190506114a3600083018461147f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114d4826114a9565b9050919050565b6114e4816114c9565b81146114ef57600080fd5b50565b600081359050611501816114db565b92915050565b60008060008060006060868803121561152357611522611267565b5b600086013567ffffffffffffffff8111156115415761154061126c565b5b61154d88828901611280565b9550955050602086013567ffffffffffffffff8111156115705761156f61126c565b5b61157c88828901611280565b9350935050604061158f888289016114f2565b9150509295509295909350565b6115a581611472565b81146115b057600080fd5b50565b6000813590506115c28161159c565b92915050565b600080604083850312156115df576115de611267565b5b60006115ed858286016115b3565b92505060206115fe858286016114f2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061167e57607f821691505b60208210810361169157611690611637565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826116bc565b61170386836116bc565b95508019841693508086168417925050509392505050565b6000819050919050565b61172e83611211565b61174261173a8261171b565b8484546116c9565b825550505050565b600090565b61175761174a565b611762818484611725565b505050565b5b818110156117865761177b60008261174f565b600181019050611768565b5050565b601f8211156117cb5761179c81611697565b6117a5846116ac565b810160208510156117b4578190505b6117c86117c0856116ac565b830182611767565b50505b505050565b600082821c905092915050565b60006117ee600019846008026117d0565b1980831691505092915050565b600061180783836117dd565b9150826002028217905092915050565b61182082611357565b67ffffffffffffffff81111561183957611838611608565b5b6118438254611666565b61184e82828561178a565b600060209050601f831160018114611881576000841561186f578287015190505b61187985826117fb565b8655506118e1565b601f19841661188f86611697565b60005b828110156118b757848901518255600182019150602085019450602081019050611892565b868310156118d457848901516118d0601f8916826117dd565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611923826111fd565b915061192e836111fd565b9250828201905080821115611946576119456118e9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611986826111fd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119b8576119b76118e9565b5b600182019050919050565b600060208201905081810360008301526119dd81846113ae565b905092915050565b600080fd5b6119f38261139d565b810181811067ffffffffffffffff82111715611a1257611a11611608565b5b80604052505050565b6000611a2561125d565b9050611a3182826119ea565b919050565b600067ffffffffffffffff821115611a5157611a50611608565b5b611a5a8261139d565b9050602081019050919050565b6000611a7a611a7584611a36565b611a1b565b905082815260208101848484011115611a9657611a956119e5565b5b611aa1848285611373565b509392505050565b600082601f830112611abe57611abd611271565b5b8151611ace848260208601611a67565b91505092915050565b600060208284031215611aed57611aec611267565b5b600082015167ffffffffffffffff811115611b0b57611b0a61126c565b5b611b1784828501611aa9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611b8481611b4f565b82525050565b6000604082019050611b9f6000830185611b7b565b611bac602083018461141e565b9392505050565b611bbc816111fd565b8114611bc757600080fd5b50565b600081519050611bd981611bb3565b92915050565b600060208284031215611bf557611bf4611267565b5b6000611c0384828501611bca565b91505092915050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b611c4181611c0c565b82525050565b6000606082019050611c5c6000830186611c38565b611c69602083018561141e565b611c76604083018461141e565b949350505050565b60008160601b9050919050565b6000611c9682611c7e565b9050919050565b6000611ca882611c8b565b9050919050565b611cc0611cbb826114c9565b611c9d565b82525050565b6000611cd28284611caf565b60148201915081905092915050565b6000606082019050611cf66000830186611b7b565b611d03602083018561141e565b8181036040830152611d1581846113ae565b905094935050505056fea264697066735822122091295559070cc8dc4b1b3971faec446fb0732eada7c48ddff5fd4a8885840d5664736f6c63430008140033";

type OffboardToUserKeyTestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffboardToUserKeyTestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffboardToUserKeyTestContract__factory extends ContractFactory {
  constructor(...args: OffboardToUserKeyTestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OffboardToUserKeyTestContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OffboardToUserKeyTestContract__factory {
    return super.connect(runner) as OffboardToUserKeyTestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffboardToUserKeyTestContractInterface {
    return new Interface(_abi) as OffboardToUserKeyTestContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OffboardToUserKeyTestContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OffboardToUserKeyTestContract;
  }
}
