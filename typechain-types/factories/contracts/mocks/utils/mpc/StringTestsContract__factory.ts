/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  StringTestsContract,
  StringTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/StringTestsContract";

const _abi = [
  {
    inputs: [],
    name: "decryptNetworkEncryptedString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserEncryptedString",
    outputs: [
      {
        components: [
          {
            internalType: "ctUint64[]",
            name: "value",
            type: "uint256[]",
          },
        ],
        internalType: "struct ctString",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isEqual",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "plaintext",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "ctUint64[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct ctString",
            name: "ciphertext",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "signature",
            type: "bytes[]",
          },
        ],
        internalType: "struct itString",
        name: "a_",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "ctUint64[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct ctString",
            name: "ciphertext",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "signature",
            type: "bytes[]",
          },
        ],
        internalType: "struct itString",
        name: "b_",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "useEq",
        type: "bool",
      },
    ],
    name: "setIsEqual",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "ctUint64[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct ctString",
            name: "ciphertext",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "signature",
            type: "bytes[]",
          },
        ],
        internalType: "struct itString",
        name: "it_",
        type: "tuple",
      },
    ],
    name: "setNetworkEncryptedString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "setPublicString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "ctUint64[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct ctString",
            name: "ciphertext",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "signature",
            type: "bytes[]",
          },
        ],
        internalType: "struct itString",
        name: "it_",
        type: "tuple",
      },
    ],
    name: "setUserEncryptedString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061187a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638a4ef8541161005b5780638a4ef854146100e857806395bf7bb1146100f0578063acbe845214610103578063f9ce33a91461012057600080fd5b806314f6161f1461008d57806335435c00146100ab57806376ae56a5146100c057806378f7d733146100d5575b600080fd5b610095610133565b6040516100a291906110cb565b60405180910390f35b6100be6100b9366004611133565b6101a1565b005b6100c86101dc565b6040516100a291906111b6565b6100be6100e3366004611133565b61026a565b6100be61029a565b6100be6100fe3660046111c9565b61031a565b6003546101109060ff1681565b60405190151581526020016100a2565b6100be61012e36600461123b565b610385565b6040805160208101909152606081526040805160008054602081810284018501855283018181529293919284929091849184018282801561019357602002820191906000526020600020905b81548152602001906001019080831161017f575b505050505081525050905090565b60006101b46101af83611471565b610413565b90506101bf81610597565b805180516001916101d59183916020019061106b565b5050505050565b600280546101e990611561565b80601f016020809104026020016040519081016040528092919081815260200182805461021590611561565b80156102625780601f1061023757610100808354040283529160200191610262565b820191906000526020600020905b81548152906001019060200180831161024557829003601f168201915b505050505081565b60006102786101af83611471565b90506102848133610667565b805180516000916101d59183916020019061106b565b6040805160018054602081810284018501855283018181526000946102fe9493928492918491908401828280156102f057602002820191906000526020600020905b8154815260200190600101908083116102dc575b50505050508152505061073b565b905061030981610803565b60029061031690826115f9565b5050565b600061035b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c592505050565b90506103678133610667565b8051805160009161037d9183916020019061106b565b505050505050565b60006103936101af85611471565b905060006103a36101af85611471565b9050600083156103be576103b78383610a4a565b90506103d3565b6103d06103cb8484610b13565b610bd4565b90505b6103dc81610c70565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055505050505050565b604080516020810190915260608152602082015151825151518114610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4d50435f434f52453a20494e56414c49445f494e5055545f5445585400000000604482015260640160405180910390fd5b600060405180602001604052808367ffffffffffffffff8111156104be576104be6112b8565b6040519080825280602002602001820160405280156104e7578160200160208202803683370190505b50905260408051808201909152600081526060602082015290915060005b8381101561058d57855151805182908110610522576105226116b9565b6020908102919091018101518352860151805182908110610545576105456116b9565b6020026020010151826020018190525061055e82610d01565b8351805183908110610572576105726116b9565b602090810291909101015261058681611717565b9050610505565b5090949350505050565b6040805160208101909152606081528151516040805160208101909152600090808367ffffffffffffffff8111156105d1576105d16112b8565b6040519080825280602002602001820160405280156105fa578160200160208202803683370190505b509052905060005b8281101561065f5761063085600001518281518110610623576106236116b9565b6020026020010151610d6a565b8251805183908110610644576106446116b9565b602090810291909101015261065881611717565b9050610602565b509392505050565b6040805160208101909152606081528251516040805160208101909152600090808367ffffffffffffffff8111156106a1576106a16112b8565b6040519080825280602002602001820160405280156106ca578160200160208202803683370190505b509052905060005b8281101561073057610701866000015182815181106106f3576106f36116b9565b602002602001015186610d7a565b8251805183908110610715576107156116b9565b602090810291909101015261072981611717565b90506106d2565b509150505b92915050565b6040805160208101909152606081528151516040805160208101909152600090808367ffffffffffffffff811115610775576107756112b8565b60405190808252806020026020018201604052801561079e578160200160208202803683370190505b509052905060005b8281101561065f576107d4856000015182815181106107c7576107c76116b9565b6020026020010151610e66565b82518051839081106107e8576107e86116b9565b60209081029190910101526107fc81611717565b90506107a6565b8051516060906000610816826008611731565b67ffffffffffffffff81111561082e5761082e6112b8565b6040519080825280601f01601f191660200182016040528015610858576020820181803683370190505b50905060008060005b848110156108ba5761088f87600001518281518110610882576108826116b9565b6020026020010151610e76565b60c01b84830160200181905292506108a8600883611748565b91506108b381611717565b9050610861565b509195945050505050565b60408051602081019091526060815281518290600060086108e7836007611748565b6108f1919061178a565b9050600060405180602001604052808367ffffffffffffffff811115610919576109196112b8565b604051908082528060200260200182016040528015610942578160200160208202803683370190505b50905290506000805b610956846008611731565b811015610a3e5761096860088261179e565b600003610978576000915061099b565b60088277ffffffffffffffffffffffffffffffffffffffffffffffff1916901b91505b848110156109e65760388682815181106109b7576109b76116b9565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c91909117905b6109f160088261179e565b600703610a2e57610a048260c01c610e86565b8351610a1160088461178a565b81518110610a2157610a216116b9565b6020026020010181815250505b610a3781611717565b905061094b565b50909695505050505050565b815151815151600091908114610a6c57610a646000610ef6565b915050610735565b6000610ab48560000151600081518110610a8857610a886116b9565b60200260200101518560000151600081518110610aa757610aa76116b9565b6020026020010151610f55565b905060015b8281101561073057610b0182610afc88600001518481518110610ade57610ade6116b9565b602002602001015188600001518581518110610aa757610aa76116b9565b610fd5565b9150610b0c81611717565b9050610ab9565b815151815151600091908114610b2d57610a646001610ef6565b6000610b758560000151600081518110610b4957610b496116b9565b60200260200101518560000151600081518110610b6857610b686116b9565b6020026020010151610fe9565b905060015b8281101561073057610bc282610bbd88600001518481518110610b9f57610b9f6116b9565b602002602001015188600001518581518110610b6857610b686116b9565b610ffe565b9150610bcd81611717565b9050610b7a565b60006064631d79e49a825b60f81b846040518363ffffffff1660e01b8152600401610c2d9291907fff00000000000000000000000000000000000000000000000000000000000000929092168252602082015260400190565b6020604051808303816000875af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073591906117e1565b6040517f0cfed56100000000000000000000000000000000000000000000000000000000815260006004820181905260248201839052908190606490630cfed561906044016020604051808303816000875af1158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf891906117e1565b15159392505050565b805160208201516040517fe4f36e1000000000000000000000000000000000000000000000000000000000815260009260649263e4f36e1092610c2d927f04000000000000000000000000000000000000000000000000000000000000009290916004016117fa565b6000606463c50c9c026004610bdf565b60408051606083901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660208201528151601481830301815260348201928390527f3c6f0e6800000000000000000000000000000000000000000000000000000000909252600091606491633c6f0e6891610e1c917f04000000000000000000000000000000000000000000000000000000000000009188916038016117fa565b6020604051808303816000875af1158015610e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5f91906117e1565b9392505050565b6000606463d2c135e56004610bdf565b60006064630cfed5616004610bdf565b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081527f0400000000000000000000000000000000000000000000000000000000000000600482015267ffffffffffffffff8216602482015260009060649063d9b60b6090604401610c2d565b60008082610f05576000610f08565b60015b6040517fd9b60b600000000000000000000000000000000000000000000000000000000081526000600482015260ff9190911660248201819052915060649063d9b60b6090604401610e1c565b60006064637c12a1eb610f6a6004808561100e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681527fffffff000000000000000000000000000000000000000000000000000000000090911660048201526024810186905260448101859052606401610e1c565b6000606463fe9c73d1610f6a83808061100e565b600060646342094c56610f6a6004808561100e565b6000606463fb7da35f610f6a8380805b6000816002811115611022576110226117b2565b60ff166008846004811115611039576110396117b2565b61ffff16901b61ffff166010866004811115611057576110576117b2565b62ffffff16901b171760e81b949350505050565b8280548282559060005260206000209081019282156110a6579160200282015b828111156110a657825182559160200191906001019061108b565b506110b29291506110b6565b5090565b5b808211156110b257600081556001016110b7565b6020808252825182820182905280516040840181905260009291820190839060608601905b8083101561111057835182529284019260019290920191908401906110f0565b509695505050505050565b60006040828403121561112d57600080fd5b50919050565b60006020828403121561114557600080fd5b813567ffffffffffffffff81111561115c57600080fd5b6111688482850161111b565b949350505050565b6000815180845260005b818110156111965760208185018101518683018201520161117a565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e5f6020830184611170565b600080602083850312156111dc57600080fd5b823567ffffffffffffffff808211156111f457600080fd5b818501915085601f83011261120857600080fd5b81358181111561121757600080fd5b86602082850101111561122957600080fd5b60209290920196919550909350505050565b60008060006060848603121561125057600080fd5b833567ffffffffffffffff8082111561126857600080fd5b6112748783880161111b565b9450602086013591508082111561128a57600080fd5b506112978682870161111b565b925050604084013580151581146112ad57600080fd5b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561130a5761130a6112b8565b60405290565b6040516020810167ffffffffffffffff8111828210171561130a5761130a6112b8565b604051601f8201601f1916810167ffffffffffffffff8111828210171561135c5761135c6112b8565b604052919050565b600067ffffffffffffffff82111561137e5761137e6112b8565b5060051b60200190565b6000601f838184011261139a57600080fd5b823560206113af6113aa83611364565b611333565b82815260059290921b850181019181810190878411156113ce57600080fd5b8287015b8481101561146557803567ffffffffffffffff808211156113f35760008081fd5b818a0191508a603f8301126114085760008081fd5b8582013560408282111561141e5761141e6112b8565b61142f88601f198c85011601611333565b92508183528c818386010111156114465760008081fd5b81818501898501375060009082018701528452509183019183016113d2565b50979650505050505050565b60006040823603121561148357600080fd5b61148b6112e7565b823567ffffffffffffffff808211156114a357600080fd5b818501915060208083360312156114b957600080fd5b6114c1611310565b8335838111156114d057600080fd5b939093019236601f8501126114e457600080fd5b83356114f26113aa82611364565b81815260059190911b8501830190838101903683111561151157600080fd5b958401955b8287101561152f57863582529584019590840190611516565b8352505084528581013592508183111561154857600080fd5b61155436848801611388565b9084015250909392505050565b600181811c9082168061157557607f821691505b60208210810361112d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b601f8211156115f457600081815260208120601f850160051c810160208610156115d55750805b601f850160051c820191505b8181101561037d578281556001016115e1565b505050565b815167ffffffffffffffff811115611613576116136112b8565b611627816116218454611561565b846115ae565b602080601f83116001811461165c57600084156116445750858301515b600019600386901b1c1916600185901b17855561037d565b600085815260208120601f198616915b8281101561168b5788860151825594840194600190910190840161166c565b50858210156116a95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019820361172a5761172a6116e8565b5060010190565b8082028115828204841417610735576107356116e8565b80820180821115610735576107356116e8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826117995761179961175b565b500490565b6000826117ad576117ad61175b565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082840312156117f357600080fd5b5051919050565b7fff000000000000000000000000000000000000000000000000000000000000008416815282602082015260606040820152600061183b6060830184611170565b9594505050505056fea2646970667358221220e9a0697c4b1e5114307c361437e6650d7c2b72cb3906fbce9baf49052943ff5864736f6c63430008140033";

type StringTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StringTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StringTestsContract__factory extends ContractFactory {
  constructor(...args: StringTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StringTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StringTestsContract__factory {
    return super.connect(runner) as StringTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringTestsContractInterface {
    return new Interface(_abi) as StringTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StringTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StringTestsContract;
  }
}
