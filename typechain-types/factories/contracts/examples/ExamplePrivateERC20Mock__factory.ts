/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExamplePrivateERC20Mock,
  ExamplePrivateERC20MockInterface,
} from "../../../contracts/examples/ExamplePrivateERC20Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "ownerValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "spenderValue",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "senderValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "accountEncryptionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "reencryptAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offBoardAddress",
        type: "address",
      },
    ],
    name: "setAccountEncryptionAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020017f5072697661746545524332304d6f636b000000000000000000000000000000008152506040518060400160405280600581526020017f504532304d00000000000000000000000000000000000000000000000000000081525081600490816200008f919062000324565b508060059081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b612aa1806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063313ce567116100ad57806396b2db381161007157806396b2db3814610344578063a42c0af914610374578063a7d9ad6a146103a4578063a9059cbb146103d4578063dd62ed3e1461040457610121565b8063313ce5671461028a57806370a08231146102a8578063722713f7146102d85780638269bcc3146102f657806395d89b411461032657610121565b806313691c76116100f457806313691c76146101d457806318160ddd146101f057806323b872dd1461020e57806326a9b3f11461023e5780632893c5b01461026e57610121565b8063043d20851461012657806306fdde031461015657806308a2032a14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611f5e565b610434565b60405161014d9190611f9a565b60405180910390f35b61015e61049c565b60405161016b9190612045565b60405180910390f35b61018e6004803603810190610189919061208b565b61052e565b60405161019b919061213f565b60405180910390f35b6101be60048036038101906101b99190612186565b61056b565b6040516101cb91906121e1565b60405180910390f35b6101ee60048036038101906101e9919061223c565b610587565b005b6101f861059e565b604051610205919061228b565b60405180910390f35b610228600480360381019061022391906122a6565b6105a3565b604051610235919061213f565b60405180910390f35b61025860048036038101906102539190612325565b6105c9565b60405161026591906121e1565b60405180910390f35b6102886004803603810190610283919061223c565b61072c565b005b610292610743565b60405161029f9190612381565b60405180910390f35b6102c260048036038101906102bd9190611f5e565b61074c565b6040516102cf91906123ab565b60405180910390f35b6102e0610798565b6040516102ed91906123d5565b60405180910390f35b610310600480360381019061030b9190611f5e565b6107a8565b60405161031d91906121e1565b60405180910390f35b61032e61088d565b60405161033b9190612045565b60405180910390f35b61035e60048036038101906103599190612325565b61091f565b60405161036b91906123d5565b60405180910390f35b61038e600480360381019061038991906123f0565b610a47565b60405161039b91906121e1565b60405180910390f35b6103be60048036038101906103b991906123f0565b610a7a565b6040516103cb919061213f565b60405180910390f35b6103ee60048036038101906103e99190612186565b610aab565b6040516103fb919061213f565b60405180910390f35b61041e6004803603810190610419919061244c565b610ac5565b60405161042b91906123ab565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600480546104ab906124bb565b80601f01602080910402602001604051908101604052809291908181526020018280546104d7906124bb565b80156105245780601f106104f957610100808354040283529160200191610524565b820191906000526020600020905b81548152906001019060200180831161050757829003601f168201915b5050505050905090565b600080339050600061054884610543906126c3565b610cc4565b9050610555868383610d6b565b610560868683610e58565b925050509392505050565b60008033905061057c818585610f51565b600191505092915050565b610599826105948361119e565b611245565b505050565b600090565b6000803390506105b4858285610d6b565b6105bf858585610e58565b9150509392505050565b6000806105d5336112cc565b90508215610681576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061067361066d8260000154611371565b8361139c565b816001018190555050610721565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506107176107118260000154611371565b8361139c565b8160020181905550505b600191505092915050565b61073e826107398361119e565b61145b565b505050565b60006002905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60006107a3336114e2565b905090565b6000806107b4336114e2565b9050826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061083d818461139c565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001915050919050565b60606005805461089c906124bb565b80601f01602080910402602001604051908101604052809291908181526020018280546108c8906124bb565b80156109155780601f106108ea57610100808354040283529160200191610915565b820191906000526020600020905b8154815290600101906020018083116108f857829003601f168201915b5050505050905090565b600081156109b6576109af600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611371565b9050610a41565b610a3e600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611371565b90505b92915050565b6000803390506000610a6184610a5c906126c3565b610cc4565b9050610a6e828683610f51565b60019250505092915050565b6000803390506000610a9484610a8f906126c3565b610cc4565b9050610aa1828683610e58565b9250505092915050565b600080339050610abc818585610e58565b91505092915050565b60003373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8157600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050610cbe565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c3b57600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050610cbe565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490505b92915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e10600480811115610cf657610cf56126d6565b5b60f81b846000015185602001516040518463ffffffff1660e01b8152600401610d2193929190612795565b6020604051808303816000875af1158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6491906127ff565b9050919050565b6000610df5600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611371565b90506000610e1382610e0e67ffffffffffffffff61119e565b61153b565b90506000610e2183856115d2565b90506000610e42610e328484611669565b85610e3d8789611700565b611797565b9050610e4f878783610f51565b50505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ecb5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ec29190611f9a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f3d5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f349190611f9a565b60405180910390fd5b610f48848484611831565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fc35760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fba9190611f9a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110355760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161102c9190611f9a565b60405180910390fd5b600061104082611a07565b9050600061104d856112cc565b9050600061105b848361139c565b9050611066856112cc565b91506000611074858461139c565b9050604051806060016040528085815260200183815260200182815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7848460405161118d92919061282c565b60405180910390a350505050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b606004808111156111d0576111cf6126d6565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b81526004016111fb929190612855565b6020604051808303816000875af115801561121a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123e91906127ff565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112b85760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112af9190611f9a565b60405180910390fd5b6112c483600084611831565b905092915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611368578290505b80915050919050565b600080820361138b57611384600061119e565b9050611397565b61139482611aa4565b90505b919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e686004808111156113ce576113cd6126d6565b5b60f81b85856040516020016113e391906128c6565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161141093929190612795565b6020604051808303816000875af115801561142f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145391906127ff565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114ce5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114c59190611f9a565b60405180910390fd5b6114da60008484611831565b905092915050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905061153381611371565b915050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16637c12a1eb6115676004806000611b41565b85856040518463ffffffff1660e01b81526004016115879392919061291c565b6020604051808303816000875af11580156115a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ca91906127ff565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663813b20746115fe6004806000611b41565b85856040518463ffffffff1660e01b815260040161161e9392919061291c565b6020604051808303816000875af115801561163d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166191906127ff565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663fb7da35f6116956000806000611b41565b85856040518463ffffffff1660e01b81526004016116b59392919061291c565b6020604051808303816000875af11580156116d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f891906127ff565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663371d1bf261172c6004806000611b41565b85856040518463ffffffff1660e01b815260040161174c9392919061291c565b6020604051808303816000875af115801561176b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178f91906127ff565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff166320cc408d6117c36004806000611b41565b8686866040518563ffffffff1660e01b81526004016117e59493929190612953565b6020604051808303816000875af1158015611804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182891906127ff565b90509392505050565b600080600083905060006118456001611ba2565b9050600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036118c5576000611888600354611371565b90506118948187611c56565b905061189f81611a07565b60038190555060006118b0886114e2565b90506118bc8188611c56565b94505050611912565b60006118d0886114e2565b905060006118dd886114e2565b905060006118ec83838a611ced565b8096508198508293505050506119028a82611da2565b61190c8683611700565b94505050505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611976576000611953600354611371565b905061195f8184611700565b905061196a81611a07565b60038190555050611981565b6119808684611da2565b5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc446119da858b61139c565b6119e4868b61139c565b6040516119f292919061282c565b60405180910390a38093505050509392505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c02600480811115611a3957611a386126d6565b5b60f81b846040518363ffffffff1660e01b8152600401611a5a929190612855565b6020604051808303816000875af1158015611a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9d91906127ff565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e5600480811115611ad657611ad56126d6565b5b60f81b846040518363ffffffff1660e01b8152600401611af7929190612855565b6020604051808303816000875af1158015611b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3a91906127ff565b9050919050565b6000816002811115611b5657611b556126d6565b5b60ff166008846004811115611b6e57611b6d6126d6565b5b61ffff16901b61ffff166010866004811115611b8d57611b8c6126d6565b5b62ffffff16901b171760e81b90509392505050565b60008082611bb1576000611bb4565b60015b60ff169050606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060006004811115611bea57611be96126d6565b5b60f81b836040518363ffffffff1660e01b8152600401611c0b929190612855565b6020604051808303816000875af1158015611c2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4e91906127ff565b915050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d0150611c826004806000611b41565b85856040518463ffffffff1660e01b8152600401611ca29392919061291c565b6020604051808303816000875af1158015611cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce591906127ff565b905092915050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28611d2260048060046000611e1a565b8b8b8b6040518563ffffffff1660e01b8152600401611d4494939291906129d3565b6060604051808303816000875af1158015611d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d879190612a18565b92509250925082828295509550955050505093509350939050565b6000611dad836112cc565b90506000611dbb8383611e9f565b905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015590505050505050565b6000816002811115611e2f57611e2e6126d6565b5b60ff166008846004811115611e4757611e466126d6565b5b61ffff16901b61ffff166010866004811115611e6657611e656126d6565b5b62ffffff16901b62ffffff166018886004811115611e8757611e866126d6565b5b63ffffffff16901b17171760e01b9050949350505050565b611ea7611ed2565b611eb083611a07565b816000018181525050611ec3838361139c565b81602001818152505092915050565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f2b82611f00565b9050919050565b611f3b81611f20565b8114611f4657600080fd5b50565b600081359050611f5881611f32565b92915050565b600060208284031215611f7457611f73611ef6565b5b6000611f8284828501611f49565b91505092915050565b611f9481611f20565b82525050565b6000602082019050611faf6000830184611f8b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fef578082015181840152602081019050611fd4565b60008484015250505050565b6000601f19601f8301169050919050565b600061201782611fb5565b6120218185611fc0565b9350612031818560208601611fd1565b61203a81611ffb565b840191505092915050565b6000602082019050818103600083015261205f818461200c565b905092915050565b600080fd5b60006040828403121561208257612081612067565b5b81905092915050565b6000806000606084860312156120a4576120a3611ef6565b5b60006120b286828701611f49565b93505060206120c386828701611f49565b925050604084013567ffffffffffffffff8111156120e4576120e3611efb565b5b6120f08682870161206c565b9150509250925092565b6000819050919050565b6000819050919050565b600061212961212461211f846120fa565b612104565b6120fa565b9050919050565b6121398161210e565b82525050565b60006020820190506121546000830184612130565b92915050565b612163816120fa565b811461216e57600080fd5b50565b6000813590506121808161215a565b92915050565b6000806040838503121561219d5761219c611ef6565b5b60006121ab85828601611f49565b92505060206121bc85828601612171565b9150509250929050565b60008115159050919050565b6121db816121c6565b82525050565b60006020820190506121f660008301846121d2565b92915050565b600067ffffffffffffffff82169050919050565b612219816121fc565b811461222457600080fd5b50565b60008135905061223681612210565b92915050565b6000806040838503121561225357612252611ef6565b5b600061226185828601611f49565b925050602061227285828601612227565b9150509250929050565b612285816120fa565b82525050565b60006020820190506122a0600083018461227c565b92915050565b6000806000606084860312156122bf576122be611ef6565b5b60006122cd86828701611f49565b93505060206122de86828701611f49565b92505060406122ef86828701612171565b9150509250925092565b612302816121c6565b811461230d57600080fd5b50565b60008135905061231f816122f9565b92915050565b6000806040838503121561233c5761233b611ef6565b5b600061234a85828601611f49565b925050602061235b85828601612310565b9150509250929050565b600060ff82169050919050565b61237b81612365565b82525050565b60006020820190506123966000830184612372565b92915050565b6123a58161210e565b82525050565b60006020820190506123c0600083018461239c565b92915050565b6123cf8161210e565b82525050565b60006020820190506123ea60008301846123c6565b92915050565b6000806040838503121561240757612406611ef6565b5b600061241585828601611f49565b925050602083013567ffffffffffffffff81111561243657612435611efb565b5b6124428582860161206c565b9150509250929050565b6000806040838503121561246357612462611ef6565b5b600061247185828601611f49565b925050602061248285828601611f49565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124d357607f821691505b6020821081036124e6576124e561248c565b5b50919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61252982611ffb565b810181811067ffffffffffffffff82111715612548576125476124f1565b5b80604052505050565b600061255b611eec565b90506125678282612520565b919050565b600080fd5b61257a816120fa565b811461258557600080fd5b50565b60008135905061259781612571565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156125c2576125c16124f1565b5b6125cb82611ffb565b9050602081019050919050565b82818337600083830152505050565b60006125fa6125f5846125a7565b612551565b905082815260208101848484011115612616576126156125a2565b5b6126218482856125d8565b509392505050565b600082601f83011261263e5761263d61259d565b5b813561264e8482602086016125e7565b91505092915050565b60006040828403121561266d5761266c6124ec565b5b6126776040612551565b9050600061268784828501612588565b600083015250602082013567ffffffffffffffff8111156126ab576126aa61256c565b5b6126b784828501612629565b60208301525092915050565b60006126cf3683612657565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61273a81612705565b82525050565b600081519050919050565b600082825260208201905092915050565b600061276782612740565b612771818561274b565b9350612781818560208601611fd1565b61278a81611ffb565b840191505092915050565b60006060820190506127aa6000830186612731565b6127b7602083018561227c565b81810360408301526127c9818461275c565b9050949350505050565b6127dc816120fa565b81146127e757600080fd5b50565b6000815190506127f9816127d3565b92915050565b60006020828403121561281557612814611ef6565b5b6000612823848285016127ea565b91505092915050565b6000604082019050612841600083018561239c565b61284e602083018461239c565b9392505050565b600060408201905061286a6000830185612731565b612877602083018461227c565b9392505050565b60008160601b9050919050565b60006128968261287e565b9050919050565b60006128a88261288b565b9050919050565b6128c06128bb82611f20565b61289d565b82525050565b60006128d282846128af565b60148201915081905092915050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b612916816128e1565b82525050565b6000606082019050612931600083018661290d565b61293e602083018561227c565b61294b604083018461227c565b949350505050565b6000608082019050612968600083018761290d565b612975602083018661227c565b612982604083018561227c565b61298f606083018461227c565b95945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6129cd81612998565b82525050565b60006080820190506129e860008301876129c4565b6129f5602083018661227c565b612a02604083018561227c565b612a0f606083018461227c565b95945050505050565b600080600060608486031215612a3157612a30611ef6565b5b6000612a3f868287016127ea565b9350506020612a50868287016127ea565b9250506040612a61868287016127ea565b915050925092509256fea2646970667358221220ee8c5b2164f91d9c51338340c0bb8a93b1bbdc8b88901383efdf903ec2f562d964736f6c63430008140033";

type ExamplePrivateERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExamplePrivateERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExamplePrivateERC20Mock__factory extends ContractFactory {
  constructor(...args: ExamplePrivateERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExamplePrivateERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ExamplePrivateERC20Mock__factory {
    return super.connect(runner) as ExamplePrivateERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExamplePrivateERC20MockInterface {
    return new Interface(_abi) as ExamplePrivateERC20MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExamplePrivateERC20Mock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ExamplePrivateERC20Mock;
  }
}
